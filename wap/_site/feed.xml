<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">

	<title type="text">GirlieMac Blog</title>
	<subtitle type="text">Arbitrary Web and Mobile Writing by Tomomi Imura</subtitle>
	<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
	<link rel="self" type="application/atom+xml" href="http://girliemac.com/feed.xml" />
	<link rel="alternate" type="text/html" href="http://girliemac.com" />
	<updated>2014-06-23T01:08:16-07:00</updated>
	<id>http://girliemac.com/</id>
	<author>
	  <name>Tomomi Imura</name>
	  <uri>http://girliemac.com/</uri>
	</author>
	
	
	<entry>
	  <title type="html"><![CDATA[Web Notifications Update]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2014/03/21/notifications/" />
	  <id>http://girliemac.com/blog/2014/03/21/notifications</id>
	  <updated>2014-03-21T00:00:00-07:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2014/03/notifications.png&quot; alt=&quot;screenshot&quot; title=&quot;Web notification&quot;&gt;&lt;/p&gt;

&lt;p&gt;Two years ago, I &lt;a href=&quot;http://girliemac.com/blog/2012/03/29/creating-non-disruptive-notifications-with-html5/&quot;&gt;wrote a demo and blogged&lt;/a&gt; about then-Chrome-only HTML5 notifications. A while ago, like, 8 Chrome versions ago, I&amp;#39;ve noticed the demo no longer worked, because the &lt;a href=&quot;http://www.chromium.org/developers/design-documents/desktop-notifications/api-specification&quot;&gt;original specication&lt;/a&gt; I was using was deprecated for good.&lt;/p&gt;

&lt;p&gt;Around the time, started by Apple first, each browser vendors had its own proprietary notifications API, then last year, they have decided to standardized specification. &lt;/p&gt;

&lt;p&gt;I finally read the &lt;a href=&quot;http://www.w3.org/TR/notifications&quot;&gt;new specifications on W3C&lt;/a&gt; recently, and rewrote the demo using the standard API.&lt;/p&gt;

&lt;h2&gt;New and Simplified Specs&lt;/h2&gt;

&lt;p&gt;In the original demo, I implemented the notifications in &lt;em&gt;webOS 3.0-style&lt;/em&gt; UX, which allowed a user to swipe to close the window. (Do you remember HP TouchPad, which was killed soon after the release and gone on fire-sale? I was a UI engineer for the beautiful dead platform.) However, &lt;a href=&quot;http://girliemac.com/html5-notifications-webOS-style/&quot;&gt;this v2 demo&lt;/a&gt; no longer supports the swipable notifications UI because the simplified new Web Notifications spcification only allows text and icon, and external HTML (with JS) files are no longer permitted.&lt;/p&gt;

&lt;h2&gt;Demo&lt;/h2&gt;

&lt;p&gt;Check out the new demo: &lt;a href=&quot;http://girliemac.com/html5-notifications-webOS-style/&quot;&gt;http://girliemac.com/html5-notifications-webOS-style&lt;/a&gt; (I keep the webOS system config look-and-feel!)&lt;/p&gt;

&lt;p&gt;The simplified standard uses &lt;code&gt;Notification&lt;/code&gt; object to represent each notification. (No &lt;code&gt;webkit&lt;/code&gt; or &lt;code&gt;moz&lt;/code&gt; vendor prefixes are required for the supported browsers.)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;notification&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Notification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;YOLO!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Request Permission&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2014/03/permission.png&quot; alt=&quot;screenshot&quot; title=&quot;Web notification&quot;&gt;&lt;/p&gt;

&lt;p&gt;Notifications can only be displayed if the user has granted permission. Requesting the user agent to ask a user for permission is done as follows:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Notification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;requestPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This process is done asynchronously, and the callback function is called when the user chooses a permission either &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;granted&lt;/code&gt;, or &lt;code&gt;denied&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;Displaying Notifications&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Notification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;permission&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;granted&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Notification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Meeting&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;March 21 3:30 PM&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;calendar.png&amp;#39;&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2014/03/notification-window.png&quot; alt=&quot;screenshot&quot; title=&quot;Notifications on Chrome&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Events&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Notification&lt;/code&gt; fires &lt;code&gt;show&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; events during the lifecycle.&lt;/p&gt;

&lt;p&gt;To close the notification window after 15 seconds:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onshow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Supported Browsers&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Firefox 22+ (both desktop and mobile)&lt;/li&gt;
&lt;li&gt;Chrome 32+ (Desktop only)&lt;/li&gt;
&lt;li&gt;Safari 6+ on Mac 10.8+ (Damnit, I need to upgrade my Mac to test!)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As long as I tested, the web notifications API is disabled on Chrome for mobile, while Firefox does support the feature (however, it has a UI issue).&lt;/p&gt;

&lt;h2&gt;Known Problems&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Chrome for Android does not support the feature&lt;/li&gt;
&lt;li&gt;Firefox on Android does support, however, only one line (the last line) is displayed on the native notification bar on top. No extra UI or window from browser. (tested on Firefox 29. Bug filed #986785.)&lt;/li&gt;
&lt;li&gt;On Chrome (tested on 33), &lt;code&gt;close()&lt;/code&gt; method does not seem to work. Notification windows fails to close automatically. (Bug filed #355214).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Firefox on Android&lt;/h3&gt;

&lt;p&gt;Notifications appear in the native notification bar, one at a time, instead of popup windows from browser.&lt;/p&gt;

&lt;p&gt;The problem is that if a notificatin contains more than one lines one messages (when both main text and &lt;code&gt;body&lt;/code&gt; are set), only the last line (&lt;code&gt;body&lt;/code&gt;) is displayed, instead of the main title, which I think makes more sense. When the notification bar is expanded by a user, both subject and body text are visible (See the screenshot below).&lt;/p&gt;

&lt;p&gt;Also, custom icons aren&amp;#39;t shown either. The icon on the notification is always Firefox icon.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2014/03/notifications-moz.png&quot; alt=&quot;screenshot&quot; title=&quot;Notifications from Firefox on Android&quot;&gt;&lt;/p&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;W3C &lt;a href=&quot;http://www.w3.org/TR/notifications&quot;&gt;Web Notifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WHATWG &lt;a href=&quot;http://notifications.spec.whatwg.org/&quot;&gt;Notifications AP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Can I use &lt;a href=&quot;http://caniuse.com/notifications&quot;&gt;Web Notifications&lt;/a&gt;?&lt;/li&gt;
&lt;li&gt;MDN &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAPI/Using_Web_Notifications&quot;&gt;Using Web Notifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Apple Safari Developer Library &lt;a href=&quot;https://developer.apple.com/library/safari/documentation/AppleApplications/Conceptual/SafariJSProgTopics/Articles/SendingNotifications.html&quot;&gt;Sending Notifications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[Filtrous.js Photo Manipulation Library]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2014/03/02/filterous/" />
	  <id>http://girliemac.com/blog/2014/03/02/filterous</id>
	  <updated>2014-03-02T00:00:00-08:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2014/03/filtrous.jpg&quot; alt=&quot;Filtrous&quot; title=&quot;Filtrous&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/girliemac/Filterous&quot;&gt;Filtrous.js&lt;/a&gt; is a photo manipulation library in JavaScript that applies filters to photos à la Instagram on browser. &lt;/p&gt;

&lt;p&gt;I originally wrote this photo manipulation tool as a part of &lt;em&gt;CoreMob Camera&lt;/em&gt; last year, and now I just released it as a separated library.&lt;/p&gt;

&lt;h3&gt;Camera App running on a browser&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2014/03/coremobcamera.jpg&quot; width=&quot;350&quot; alt=&quot;CoreMob Camera&quot; align=&quot;right&quot;&gt;&lt;/p&gt;

&lt;p&gt;Last year was incredibly busy for me, and I totally failed to propertly document about this web app, although I promissed to write up on a separated blog.&lt;/p&gt;

&lt;p&gt;I originally started writing this app in the end of 2012, with help of Tobie Langel, Dominique Hazael-Massieux et al. as a side project for &lt;a href=&quot;https://github.com/coremob&quot;&gt;Core Mobile Web Platform W3C Community Group&lt;/a&gt; (which is now closed and reborn as &lt;a href=&quot;https://github.com/w3c-webmob&quot;&gt;Web and Mobile Interest Group&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;The web app (also, I have created a hybrid app with PhoneGap) was called &lt;a href=&quot;https://github.com/coremob/camera&quot;&gt;CoreMob Camera&lt;/a&gt;, which allows you to take a snapshot directly from a browser, and apply filters to the photo, save onto the browser, also send to server. The whole purpose was to showcase the capabilities of the Web platform, showing developers HTML5 use cases on mobile, and help improve browsers by showing bugs, missing features etc. to browser vendors. &lt;/p&gt;

&lt;p&gt;If you are curious, &lt;a href=&quot;http://coremob.github.io/camera/vanilla/index.html&quot;&gt;try the app on mobile browser&lt;/a&gt;. This fails on some browsers, and the vendors are acknowledged.&lt;/p&gt;

&lt;p&gt;I also talked about this app and the technology on several conferences, including &lt;a href=&quot;http://www.w3.org/conf/2013sf/&quot;&gt;W3C Conf&lt;/a&gt;, so watch it if you are interested! (Watch my talk on &lt;a href=&quot;https://www.youtube.com/watch?v=3Afi-v-m_Gc&quot;&gt;YouTube&lt;/a&gt;). Also, I was demoing this web app at Mobile World Congress 2013. See &lt;a href=&quot;http://www.w3.org/blog/2013/04/interview-demonstrating-web-ap/&quot;&gt;my interview&lt;/a&gt; on W3C Blog ;-)&lt;/p&gt;

&lt;h2&gt;Filtrous.js - Tweak Pixels with Canvas&lt;/h2&gt;

&lt;p&gt;Anyway, &lt;em&gt;Filtrous.js&lt;/em&gt; take pixel data from a photo that you want to give filter effects, and maniplute its pixels using the &lt;code&gt;canvas&lt;/code&gt; element. The finished photo can be displayed as canvas, or as downloadable image formats such as jpeg, png, or webp for Chrome.&lt;/p&gt;

&lt;p&gt;This is how the photo manipulation works-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First a &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; is defined and import an photo into the canvas by using &lt;code&gt;drawImage()&lt;/code&gt; method to draw the image object. &lt;/li&gt;
&lt;li&gt;Then, use &lt;code&gt;getImageData()&lt;/code&gt; method to obtain an &lt;code&gt;ImageData&lt;/code&gt; object containing a copy of the pixel data for a context.&lt;/li&gt;
&lt;li&gt;Then &amp;quot;applying filter&amp;quot; by tweaking the pixel data, which I will talk a bit more on the next slide.&lt;/li&gt;
&lt;li&gt;Finally, using &lt;code&gt;putImageData()&lt;/code&gt; method, paint pixel data back into a context.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The calculation of tweaking pixels is actually done on each canvas pixel by looping through one by one, so foe example, if your photo dimension is 100 x 100, you need to interate the operation for 10,000 times, and this can be slow on mobile. Well, at least I thought so last year, but mobile hardware and browsers have improved like crazy and I am surprised how quickly it can be on mobile done now, even with my &amp;quot;low-cost&amp;quot; Moto G device.&lt;/p&gt;

&lt;h3&gt;Usage&lt;/h3&gt;

&lt;p&gt;Using Filtrous is easy. See this &lt;a href=&quot;http://girliemac.com/Filterous/demo/&quot;&gt;Demo&lt;/a&gt; too.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;myPhoto&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;scr=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cat.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myPhoto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;myPhoto&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Filterous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myPhoto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;jpeg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// output: jpeg, png, webp. default is canvas&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The image on top of this blog shows examples of combination of &amp;quot;beightness&amp;quot; and &amp;quot;rgbAdjust&amp;quot; filters (center), and grayscale (right).&lt;/p&gt;

&lt;p&gt;The effect in the middle can be achieved by applying two filters:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filterImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;rgbAdjust&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filterImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;brightness&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also, I have made an extra JS file that you can import, so you can use the named preset effects such as &amp;quot;nostalgia&amp;quot; (slightly sepea tone) and &amp;quot;rockstar&amp;quot; (with starry overlay) that you see in the demo.&lt;/p&gt;

&lt;p&gt;If you would like to use &lt;em&gt;Filtrous&lt;/em&gt;, see my &lt;a href=&quot;https://github.com/girliemac/Filterous&quot;&gt;github&lt;/a&gt; page for more info :-)&lt;/p&gt;

&lt;h2&gt;Why not CSS3?&lt;/h2&gt;

&lt;p&gt;Multiple people have asked me why I used &lt;code&gt;canvas&lt;/code&gt; while the CSS3 Filter effects has been adopted by WebKit and Blink browsers.
I love the ease of using the CSS3 filters and wrote a &lt;a href=&quot;/blog/2011/12/21/quick-fun-css3-filter-effects/&quot;&gt;blog&lt;/a&gt; about it too. However, unlike the pixel manipulation in canvas, the CSS filter is just a visual representation and it does not actually alter the physical property of the photos. When you download the filtered photo, you still get the unfiltered original image.&lt;/p&gt;

&lt;h2&gt;Links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/girliemac/Filterous&quot;&gt;Filterous.js on Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://girliemac.com/Filterous/demo/&quot;&gt;Filterous.js Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/coremob/camera&quot;&gt;CoreMob Camera&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[Vibration API Use Case: Form Validation]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2014/02/14/vibration/" />
	  <id>http://girliemac.com/blog/2014/02/14/vibration</id>
	  <updated>2014-02-14T00:00:00-08:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;h2&gt;Vibration API Last Call&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;http://www.w3.org/2009/dap/&quot;&gt;Device API Working Group&lt;/a&gt; has published a third Last Call working draft of the &lt;a href=&quot;http://www.w3.org/TR/2014/WD-vibration-20140211/&quot;&gt;Vibration API&lt;/a&gt;, and since the API is highly relevant to mobile devices, we have been discussing about it on W3C&amp;#39;s &lt;a href=&quot;http://www.w3.org/Mobile/IG/&quot;&gt;Web and Mobile Interest Group&lt;/a&gt; (aka &lt;em&gt;WebMob&lt;/em&gt;).&lt;/p&gt;

&lt;h2&gt;Use cases&lt;/h2&gt;

&lt;p&gt;There has been some (dirty) jokes about the use cases in past, and recently Terrence Eden came up with funny use cases that actually may be somehow useful(&lt;a href=&quot;http://shkspr.mobi/blog/2014/01/malicious-use-of-the-html5-vibrate-api/&quot;&gt;&lt;em&gt;Malicious Use of the HTML5 Vibrate API&lt;/em&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;But seriuously, what can be good use cases for this API for everyday web expeiences besides gaming? 
I was even thinking that this API can be more harmful than useful when there is no UI indication (or permission setting like Geolocation) associated with it, and confuses users if developers abuse the API.&lt;/p&gt;

&lt;p&gt;Then, &lt;a href=&quot;http://lists.w3.org/Archives/Public/public-web-mobile/2014Feb/0022.html&quot;&gt;Michael van Ouwerkerk suggested&lt;/a&gt; form validation. He mentioned on the mailing list - &amp;quot;Especially on mobile devices, with the software keyboard being displayed, it is easy to miss visual form validation messages. Some additional tactile feedback is an easily learned signal.&amp;quot;&lt;/p&gt;

&lt;p&gt;Ah, finally there is a good use case scenario!&lt;/p&gt;

&lt;h2&gt;Demo&lt;/h2&gt;

&lt;p&gt;So I quickly put things up together to see how it works in a real life scenario. I used my old HTML5 form validation demo I wrote for Nokia Code Blog (Bummer, it has been deleted while cleaning up the Nokia assets for Microsoft&amp;#39;s partial aquisition. But I have the copy on &lt;a href=&quot;http://girliemac.com/blog/2012/11/21/html5-form-validation/&quot;&gt;my blog&lt;/a&gt; in 2012!)&lt;/p&gt;

&lt;p&gt;Here is the demo in action. &lt;strong&gt;Turn the volume all way up&lt;/strong&gt; so you can hear my phone buzzes:&lt;/p&gt;

&lt;iframe src=&quot;//player.vimeo.com/video/86735842&quot; width=&quot;500&quot; height=&quot;280&quot; frameborder=&quot;0&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;You can &lt;a href=&quot;https://dl.dropboxusercontent.com/u/1330446/demo/vibration.html&quot;&gt;try it&lt;/a&gt; by yourself on latest Firefox browser on Adnroid. (This demo fails on FF18 on FirefoxOS. Probably because the constraint validation doesn&amp;#39;t work? I need to look into it!)&lt;/p&gt;

&lt;p&gt;Basically, what it does is that when a user tries to submit the form while the &lt;code&gt;required&lt;/code&gt; field is left empty, or the entered text does not match the requirement (In this case, the character entered do not match the pattern for Twitter username, where some special chars are not allowed.), the phone buzzes as a feedback.&lt;/p&gt;

&lt;h3&gt;Code&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&amp;gt;&lt;/span&gt;    
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;username&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pattern=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;^[A-Za-z0-9_]{1,15}$&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Submit&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The credit for the pattern matching for the Twitter username goes to &lt;a href=&quot;http://html5pattern.com&quot;&gt;HTML5Pattern&lt;/a&gt; :-)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vibrate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vibrate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mozVibrate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;invalid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCustomValidity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Enter a valid username, dumbass!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vibrate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the demo, when the &lt;code&gt;invalid&lt;/code&gt; event is fired, the sequience pattern makes the device to vibrate shortly twice - for 100 ms, be still for 50 ms, and then vibrate for 100 ms.&lt;/p&gt;

&lt;p&gt;I hope to see more use cases for the API.&lt;/p&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[Responsive UI with Luminosity Level]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2014/01/12/luminosity/" />
	  <id>http://girliemac.com/blog/2014/01/12/luminosity</id>
	  <updated>2014-01-12T00:00:00-08:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;Happy new year!&lt;/p&gt;

&lt;p&gt;I wonder how the year 2014 will be in terms of the web standards and HTML5, as the first biggest news of the year from W3C was the MPAA joining the W3C as a member and the controversy on DRM has heated up again.&lt;/p&gt;

&lt;p&gt;My first blog of the year is not going to be about DRM, but I write a topic on responsive design with ambient light level, which I cover a little bit at SF HTML5 meetup last November, where I received some oohs and aahs so I want to write about it more here.&lt;/p&gt;

&lt;h2&gt;Screen readability under sunlight&lt;/h2&gt;

&lt;p&gt;My Lumia phone comes with the awesome sunlight readability enhancement feature. It detects the light levels in my environment and adjust the screen accordingly. When I get outside under the sun from indoor, the luminance of the screen increases, so I can still read my screen just fine. On the other hand, my another phone, an Android device becomes totally useless under such brightness.
So it doesn&amp;#39;t matter how the web sites are made &amp;quot;Mobile first&amp;quot; and how &amp;quot;responsive&amp;quot; they claimed to be, I just can&amp;#39;t read anything. I wish all other phones work just like Lumia.&lt;/p&gt;

&lt;p&gt;Meanwhile, sometimes last year, on W3C CSS mailing list, I learned the &lt;code&gt;luminosity&lt;/code&gt; media feature was coming to the &lt;a href=&quot;http://dev.w3.org/csswg/mediaqueries4/#luminosity&quot;&gt;CSS Media Queries 4&lt;/a&gt;, and I was excited. Yes, besides screen resolutions, orientations, pixel density and such, we will be able to make web responsive with the environmetal light level too, once the spec is implemented in browsers!&lt;/p&gt;

&lt;p&gt;Awesome. But when will it happen?&lt;/p&gt;

&lt;h2&gt;Ambient Light Events API&lt;/h2&gt;

&lt;p&gt;So there is no way for us to adjust the readability with light level using CSS in this moment, however, we already have the &lt;a href=&quot;http://www.w3.org/TR/ambient-light/&quot;&gt;Ambient Light Events&lt;/a&gt;.
This is a part of the HTML5 &lt;a href=&quot;http://www.w3.org/2009/dap/&quot;&gt;Device APIs&lt;/a&gt;, which make browsers to interact with devices services. Ambient Light Events API allows to access the light/photo censor, using simple JavaScript.&lt;/p&gt;

&lt;p&gt;Now I can use the API to emulate the yet-to-come CSS Level 4 Media-queires to make a web responsive to the light level!&lt;/p&gt;

&lt;h3&gt;Devicelight events&lt;/h3&gt;

&lt;p&gt;A browser fires the &lt;code&gt;DeviceLightEvent&lt;/code&gt; event when the light sensor of a device detects a light level change. You can capture the event by using the &lt;code&gt;devicelight&lt;/code&gt; event handler event type.&lt;/p&gt;

&lt;p&gt;Its property, &lt;code&gt;value&lt;/code&gt; returns the level of the light in &lt;em&gt;lux&lt;/em&gt; unit.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;devicelight&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;lux&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Making web responsive to light&lt;/h3&gt;

&lt;p&gt;I have made a super simple demo.&lt;/p&gt;

&lt;p&gt;What I did is basically changing the UI, depending on the light level in the device environment for better readability. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Default: display in black text and light gray background&lt;/li&gt;
&lt;li&gt;Under bright light: black text and white background&lt;/li&gt;
&lt;li&gt;In darkness: white text and dark background&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;devicelight&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lux&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lux&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// dim&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;dim&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lux&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lux&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;normal&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lux&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// bright&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bright&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.normal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ddd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.dim&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#444&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.bright&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here&amp;#39;s the video showing the demo in action.&lt;/p&gt;

&lt;iframe src=&quot;//player.vimeo.com/video/79466285&quot; width=&quot;500&quot; height=&quot;280&quot; frameborder=&quot;0&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Browser supports and Devices&lt;/h3&gt;

&lt;p&gt;The source code is on &lt;a href=&quot;http://codepen.io/girliemac/pen/pvmBs&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Most of you will probably noticed the message that says &lt;em&gt;&amp;quot;AmbientLightEvent is not supported.&amp;quot;&lt;/em&gt; on the browser you are currently looking at.
Sadly, this API is currently only supported by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DeviceLightEvent&quot;&gt;&lt;strong&gt;Firefox 22+&lt;/strong&gt;&lt;/a&gt;, and the hardware needs to be equipped with a sensor to detect light. In my demo, I am using Firefox on &lt;strong&gt;Nexus 7&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The actual values returned from the event seem to be varied depending on the devices (Android and FirefoxOS) I tested. Probably the sensor&amp;#39;s sensitivity are different.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2014/01/luminosity-devices.jpg&quot; alt=&quot;MotoG and Keon&quot; title=&quot;MotoG and Keon&quot;&gt;&lt;/p&gt;

&lt;p&gt;The photo shows that the Motolora G and Keon FirefoxOS devices show different values under the same dim room light. (6 lux vs. 61 lux!)&lt;/p&gt;

&lt;h2&gt;CSS Media Queries Level 4 Luminosity&lt;/h2&gt;

&lt;p&gt;OK, let&amp;#39;s go back to the original topic, Luminosity media-queries.
Currently, the &lt;a href=&quot;http://dev.w3.org/csswg/mediaqueries4/#luminosity&quot;&gt;specification&lt;/a&gt; is under editor&amp;#39;s draft, which means that the spec is still in really early stage and unstable. It will take a while to see it in action on browsers.&lt;/p&gt;

&lt;p&gt;Once this is supported, the JavaScript sample can be re-written only with CSS:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;luminosity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ddd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;luminosity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;dim&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#444&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;luminosity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;washed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#333&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can simply use &lt;code&gt;luminosity&lt;/code&gt; media feature to query the light level, just like any other media features we are already used to write to create responsive web.&lt;/p&gt;

&lt;p&gt;Now, we have more things to worry when thinking of RWD ;-)&lt;/p&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[How-to: Migrating Blog from WordPress to Jekyll, and Host on Github]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2013/12/27/wordpress-to-jekyll/" />
	  <id>http://girliemac.com/blog/2013/12/27/wordpress-to-jekyll</id>
	  <updated>2013-12-27T00:00:00-08:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2013/12/jekyll.png&quot; alt=&quot;Jekyll on Github&quot; title=&quot;Jekyll on Github&quot;&gt;&lt;/p&gt;

&lt;p&gt;Last year during holidays, I knetted a &lt;a href=&quot;http://www.flickr.com/photos/70561195@N00/8314700407/in/photolist-dEK1Kz-dEK4cT&quot; target=&quot;_blank&quot;&gt;NyanCat scarf&lt;/a&gt;. As this year&amp;#39;s project, I finally migrated my Wordpress blog to &lt;a href=&quot;http://jekyllrb.com/&quot; title=&quot;Jekyll&quot;&gt;Jekyll&lt;/a&gt;, and host on Github Pages to say good-bye to PHP and web hosting server.&lt;/p&gt;

&lt;h2&gt;Why&lt;/h2&gt;

&lt;p&gt;Wordpress is great, and has been working wonderfully for me. However, I decided to make the change becasue:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Jekyll allows &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot; title=&quot;Markdown&quot;&gt;markdown&lt;/a&gt;. I have been annoyed writing HTML for my blog. &lt;/li&gt;
&lt;li&gt;The latest Jekyll comes with &lt;a href=&quot;http://pygments.org/&quot; title=&quot;Pygment&quot;&gt;Pygment&lt;/a&gt; syntax highlighter. Writing code snipets is easier in markdown (no need to escape HTML tages, yay!), and the code samples are prettified with Pygment.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pages.github.com/&quot; title=&quot;Github Pages&quot;&gt;Github&lt;/a&gt; offers free hosting, and of course, having version control is awesome. &lt;/li&gt;
&lt;li&gt;More control using command line is nice. I can use &lt;a href=&quot;http://gruntjs.com/&quot; title=&quot;Grunt&quot;&gt;Grunt&lt;/a&gt; to automate tasks, including build process and minifying code, too.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;What I did&lt;/h3&gt;

&lt;p&gt;While I was migrating, I took notes so I can share with you who wants to do the same.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s a list of the steps that I actually went through.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Migrate comments on Wordpress to Disqus&lt;/li&gt;
&lt;li&gt;Export Wordpress contents&lt;/li&gt;
&lt;li&gt;Install and setup Jekyll&lt;/li&gt;
&lt;li&gt;Host on Github&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I am on Mac OS 10.7.5 (still!), and WordPress 3.7 by the way. Read on if you would like to follow my steps-&lt;/p&gt;

&lt;h2&gt;Before leaving WordPress&lt;/h2&gt;

&lt;h3&gt;Setup Disqus&lt;/h3&gt;

&lt;p&gt;Skip this process if you&amp;#39;re already using Disqus on your WP blog.&lt;/p&gt;

&lt;p&gt;First, sign up and register the site with Disqus at &lt;a href=&quot;http://disqus.com/admin/create/&quot;&gt;disqus.com/admin/create&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Go to your WordPress Admin page. Then, go to &lt;strong&gt;Plugins&lt;/strong&gt;, serach for &lt;strong&gt;Disqus Comment System plugin&lt;/strong&gt; and install it, then activate.&lt;/p&gt;

&lt;p&gt;Once activated, check the Disqus Setting to make sure your Disqus account is connected to your WP blog. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2013/12/wp-disqus.png&quot; alt=&quot;Screenshot&quot; title=&quot;screenshot&quot;&gt;&lt;/p&gt;

&lt;p&gt;To manually migrate the WP comments to Disqus style comments, go to &lt;strong&gt;Tools &amp;gt; Export&lt;/strong&gt;, and download the WordPress (WXR) XML file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2013/12/wp-export.png&quot; alt=&quot;Screenshot&quot; title=&quot;screenshot&quot;&gt;&lt;/p&gt;

&lt;p&gt;Next, go to &lt;a href=&quot;http://import.disqus.com&quot;&gt;import.disqus.com&lt;/a&gt;, upload the xml that you just downloaded from the last step, to import all the comment into Disqus.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2013/12/disqus-import.png&quot; alt=&quot;Screenshot&quot; title=&quot;screenshot&quot;&gt;&lt;/p&gt;

&lt;p&gt;Go back to your WP Admin page to see if all the comments are available in Disqus plugin.&lt;/p&gt;

&lt;h2&gt;Leaving WordPress&lt;/h2&gt;

&lt;h3&gt;Export All WP Contents&lt;/h3&gt;

&lt;p&gt;Fisrt, install &lt;strong&gt;WordPress to Jekyll Exporter&lt;/strong&gt; manually.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download the zipped source code from the &lt;a href=&quot;https://github.com/benbalter/wordpress-to-jekyll-exporter&quot;&gt;github&lt;/a&gt; page. &lt;/li&gt;
&lt;li&gt;FTP the upzipped source into the folder in &lt;code&gt;/wp-content/plugins/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Activate it in the WP Admin page.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then go to &lt;strong&gt;Tools &amp;gt; Export to Jekyll&lt;/strong&gt; and download a a zip file. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2013/12/wp-download.png&quot; alt=&quot;Screenshot&quot; title=&quot;screenshot&quot;&gt;&lt;/p&gt;

&lt;p&gt;The exported folder contains all posts and pages that coverted into Markdown. All the images uploaded using WP&amp;#39;s &lt;em&gt;Media Library&lt;/em&gt; are expoted too. If you have images manually uploaded, they may not be included in the zip file.&lt;/p&gt;

&lt;h2&gt;Hello, Jekyll!&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Install and setup Jekyll&lt;/h3&gt;

&lt;p&gt;I am not going to explain how to use &lt;strong&gt;Jekyll&lt;/strong&gt; from scratch, so please go to &lt;a href=&quot;http://jekyllrb.com/&quot; title=&quot;Jekyll&quot;&gt;Jekyll&lt;/a&gt;&amp;#39;s official site to learn the ABC, if you are not already familiar.&lt;/p&gt;

&lt;p&gt;Install jekyll ruby gem locally, and create a new Jekyll blog:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install jekyll
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jekyll new yourname.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where &lt;code&gt;yourname.github.io&lt;/code&gt;, I named mine &lt;code&gt;girliemac.github.io&lt;/code&gt;. By naming the github repo with this format, you can serve up your blog on the url, &lt;code&gt;http://username.github.io&lt;/code&gt;, although you can use your own domain name.&lt;/p&gt;

&lt;p&gt;This gives you a clean Jekyll site and no fluff.
&lt;img src=&quot;/assets/images/articles/2013/12/jekyll-new.png&quot; alt=&quot;Screenshot&quot; title=&quot;screenshot&quot;&gt;&lt;/p&gt;

&lt;p&gt;Alternatively, you can use some pre-designed templates. Go to &lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;jekyllthemes.org&lt;/a&gt;, and download one.&lt;/p&gt;

&lt;h3&gt;Import the WP Contents&lt;/h3&gt;

&lt;p&gt;Unzip the &lt;code&gt;jekyll-export.zip&lt;/code&gt; you exported off your WordPress. The &lt;code&gt;_post&lt;/code&gt; filder should contain all blog posts in markdown, and &lt;code&gt;wp_content&lt;/code&gt; has images. Other static pages should have its own folder as well.&lt;/p&gt;

&lt;p&gt;Copy them into your new &lt;code&gt;yourname.github.io&lt;/code&gt; (or whatever you named) folder. 
You may want to manually tweak the  &lt;code&gt;_config.yml&lt;/code&gt; file, or merge the exported &lt;code&gt;_config.yml&lt;/code&gt; file with the one comes with the theme you downloaded, rather than just overwriting.&lt;/p&gt;

&lt;p&gt;To use the &lt;em&gt;Pygments&lt;/em&gt; syntax highlighter, add this line in your  &lt;code&gt;_config.yml&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash language-bash&quot; data-lang=&quot;bash&quot;&gt;pygments: &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once everything is ported into the new jekyll project folder, build the site and preview on browser.&lt;/p&gt;

&lt;p&gt;To build,&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;yourname.github.io
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jekyll build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The current folder will be generated into &lt;code&gt;./_site&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To view the generated site locally,&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, your development server runs at &lt;code&gt;http://localhost:4000/&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Add Disqus Comments&lt;/h2&gt;

&lt;p&gt;To include Disqus comments and the legacy comments ported from old WordPress is easy.&lt;/p&gt;

&lt;p&gt;Login on Disqus, and copy the &lt;em&gt;Universal Embed Code&lt;/em&gt; from &lt;a href=&quot;http://docs.disqus.com/developers/universal/&quot;&gt;Disqus&lt;/a&gt;. (Once logged in, the &lt;code&gt;disqus_shortname&lt;/code&gt; should be already generated for you. Otherwise, add it manually.)&lt;/p&gt;

&lt;p&gt;Paste the code into where you want the comments to be displayed in &lt;code&gt;_layouts/post.html&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Once you deploy, the Disqus comment form along with the old commnets should be appeared on the new blog!&lt;/p&gt;

&lt;h2&gt;Optional: Use Grunt&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://nodejs.org/&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;grunt-cli&lt;br&gt;
&lt;code&gt;
$ sudo npm install -g grunt-cli
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Grunt is a JavaScript tast runner that you can automate some repetitive tasks. &lt;/p&gt;

&lt;p&gt;Useful grunt plugins for Jekyll can be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;grunt-contrib-jshint&lt;/code&gt; jsHint&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grunt-contrib-cssmin&lt;/code&gt; to minify CSS&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grunt-contrib-uglify&lt;/code&gt; to minify JavaScript&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grunt-contrib-imagemin&lt;/code&gt; to optimize images&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grunt-shell-spawn&lt;/code&gt; to include &lt;code&gt;jekyll build&lt;/code&gt; command&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grunt-contrib-watch&lt;/code&gt; to monitor if specified files are modified run tasks
etc. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information, go to &lt;a href=&quot;http://gruntjs.com/&quot; title=&quot;Grunt&quot;&gt;gruntjs.com&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Deploy to Github Pages&lt;/h2&gt;

&lt;p&gt;So long, my web server, I port everything on my github for free!&lt;/p&gt;

&lt;p&gt;Some files and directries don&amp;#39;t need to be pushed to github. Put &lt;code&gt;_sites&lt;/code&gt; and &lt;code&gt;node_modules&lt;/code&gt; if using Grunt in &lt;code&gt;.gitignore&lt;/code&gt; file. (and of course, &lt;code&gt;.DS_Store&lt;/code&gt; if you are a Mac user! ugh!) &lt;/p&gt;

&lt;p&gt;Commit and push your Jekyll site to github. You don&amp;#39;t need to create a &lt;code&gt;gh-pages&lt;/code&gt; branch, when you name the repo with &lt;code&gt;yourname.github.io&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;Set a Custom Domain Name&lt;/h2&gt;

&lt;h3&gt;Set a CNAME on Github&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Create a file named &lt;code&gt;CNAME&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;in the file, put your domain name, without &lt;code&gt;http://&lt;/code&gt;. In my case:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;text language-text&quot; data-lang=&quot;text&quot;&gt;girliemac.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Set up DNS&lt;/h3&gt;

&lt;p&gt;Basically, all you need is to set these.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A Record&lt;/strong&gt;: 204.232.175.78&lt;br&gt;
&lt;strong&gt;CNAME&lt;/strong&gt;: yourname.github.io&lt;/p&gt;

&lt;p&gt;I use NameCheap.com to manage my domain names, and this is a screenshot of the host setup on namecheap.com. Your registrar probably has a similar setting.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2013/12/domain-namecheap.png&quot; alt=&quot;Screenshot&quot; title=&quot;screenshot&quot;&gt;&lt;/p&gt;

&lt;p&gt;If you don&amp;#39;t see the &amp;quot;All Host Records&amp;quot; link, you probably need to disconnect from your previous web host DNS by clicking &amp;quot;Transfer the DNS back to us&amp;quot;) and follow the instruction first.
This takes about a few hours to complete.&lt;/p&gt;

&lt;p&gt;Ta-da! Now I have my blog ported on github!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[Fluid Layout Neue &#8211; Responsive Layout with CSS3 Awesomeness]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2013/12/19/fluid-layout-neue/" />
	  <id>http://girliemac.com/blog/2013/12/19/fluid-layout-neue</id>
	  <updated>2013-12-19T00:00:00-08:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;Responsive Web Design has been a hot topic in past years yet I hardly cover in my blog. So here, I am focusing some of the shiny new CSS3 layout modules that are perfectly responsive!&lt;/p&gt;

&lt;h4&gt;Party like 1999&lt;/h4&gt;

&lt;p&gt;Back in the time, when kozmo.com delivered you pizza and video, and a sock puppet was advertising pets.com, we developed web sites with complicated layout using &lt;table&gt;. Frameset was an another way to separate navigations from the contents. (OMG! remember the HTML 4.01 Frameset DTD!?). Yes, CSS was there already, but too immature to be used for the web page layout. Craziness.&lt;/p&gt;

&lt;h4&gt;Early-Noughties: Flipping tables&lt;/h4&gt;

&lt;p&gt;When CSS was well-standarized in ealry-2000s, &amp;#8220;table-less&amp;#8221; layout became a job requirement for web developer positions.&lt;br&gt;
(╯°□°）╯︵ ┻━┻&lt;br&gt;
We were excited about the &amp;#8220;Holy Grail&amp;#8221; column layout, as the same time the Holy Grail gave us such a pain especially when it came to the cross-browser development. About 10 years has passed, and we still somewhat dislike using CSS floats, negative margins and all the hacks to make come columns.&lt;/p&gt;

&lt;h4&gt;Mid-2000s: Era of UI Libraries&lt;/h4&gt;

&lt;p&gt;In 2005, around the time when we first heard the word, Ajax, Yahoo! had launched The Yahoo! User Interface Library (YUI). YUI was probably the first UI libraries came with complicated layouts like grids. In 2006, we got jQuery, then jQuery UI later.&lt;br&gt;
With CSS and help with the libraries, we, developers felt more comfortable building modern-looking web sites.&lt;/p&gt;

&lt;h4&gt;Now and Future: Late for the party with CSS3&lt;/h4&gt;

&lt;p&gt;As browser vendors have been implementing, we finally started taking advantage of the CSS 3, to create semantic web sites with complex layout with no external libraries. In the era of the responsive web design, these CSS3 fluid layout also can be responsive! &lt;/p&gt;

&lt;p&gt;Currently, these CSS 3 layout modules are W3C candidate recommendation, or yet to be determined to be standard.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Multi-Columns Layout&lt;/li&gt;
&lt;li&gt; lexible Box Layout &lt;/li&gt;
&lt;li&gt; Regions &lt;/li&gt;
&lt;li&gt; Grid Layout&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Fluid Columns Example&lt;/h2&gt;

&lt;p&gt;With CSS3, building the fluid column layout is incredibly easy. &lt;a href=&quot;http://www.w3.org/TR/css3-multicol/&quot; title=&quot;W3C&quot; target=&quot;_blank&quot;&gt;CSS3 Multi-column layout modules&lt;/a&gt; is currently under Candidate Recommendation, which means it is a stable web standard, and has a &lt;a href=&quot;http://caniuse.com/#search=column&quot; title=&quot;Can I use?&quot; target=&quot;_blank&quot;&gt;good browser support&lt;/a&gt; by now although still requires vendor prefixes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://girliemac.github.io/presentation-slides/html5-mobile-approach/images/column-mobile.png&quot; style=&quot;height:360px;display:inline-block&quot; /&gt;&lt;img src=&quot;http://girliemac.github.io/presentation-slides/html5-mobile-approach/images/column-tablet.png&quot; style=&quot;height:360px;display:inline-block&quot;&quot;&gt;&lt;img src=&quot;http://girliemac.github.io/presentation-slides/html5-mobile-approach/images/column-desktop.png&quot; style=&quot;height:360px;display:inline-block&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;The actual demo code of the screenshot can be found on my CodePen at &lt;a href=&quot;http://codepen.io/girliemac/pen/LGBgb&quot; target=&quot;_blank&quot;&gt;http://cdpn.io/LGBgb&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s start from a small screen (Mobile-first, yo!). When the width of the browser windows is pretty small, the page layouts with no multi-column (actually, only 1 column). When the window is wider than 200 x 2 + margin + column-gap (1em but browser dependent) pixels, the content text is displayed in two column, when 200 x 3… and so on and so forth.&lt;/p&gt;

&lt;p&gt;The css used for the example is incredibly simple.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.col&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;webkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;moz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;c&quot;&gt;/* column-count: auto */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Flexbox Example&lt;/h2&gt;

&lt;p&gt;Actually, &lt;a href=&quot;http://www.w3.org/TR/css3-flexbox/&quot; title=&quot;W3C&quot; target=&quot;_blank&quot;&gt;CSS 3 Flexible Box Layout Module&lt;/a&gt; was first introduced in 2009, however, its specifications have been modified over and over since then, and browser vendors have implemented each version. I was a UI developer at Palm back then, and used the flexbox for the core webOS 3 UI design and the framework. I even blogged about the now-outdated flexbox in 2011 for developer.palm.com. It was too early.&lt;/p&gt;

&lt;p&gt;Anyway, fast-forward to 2013, &lt;em&gt;Flexbox&lt;/em&gt; is now in candidate recommendation, and &lt;a href=&quot;http://caniuse.com/#search=flexbox&quot; title=&quot;Can I use?&quot; target=&quot;_blank&quot;&gt;many browsers&lt;/a&gt; even dropped the vendor prefixes. &lt;/p&gt;

&lt;p&gt;This demo (&lt;a href=&quot;http://codepen.io/girliemac/pen/CuvBc&quot; target=&quot;_blank&quot;&gt;http://cdpn.io/CuvBc&lt;/a&gt;) uses the latest specs with combination with media-queries to achieve the different layouts. The &lt;code&gt;#main&lt;/code&gt; components is displayed in column when the browser window is wide enough, otherwise shown in row.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://girliemac.github.io/presentation-slides/html5-mobile-approach/images/fluid-layout/flexbox-mobile.png&quot; style=&quot;height:400px;display:inline-block&quot; /&gt; &lt;img src=&quot;http://girliemac.github.io/presentation-slides/html5-mobile-approach/images/fluid-layout/flexbox-desktop.png&quot; style=&quot;height:400px;display:inline-block&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;640px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;nf&quot;&gt;#main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Regions Example&lt;/h2&gt;

&lt;p&gt;With CSS Regions, you can define how the contents flow, just like magazine layout. &lt;a href=&quot;http://www.w3.org/TR/css3-regions/&quot; title=&quot;W3C&quot; target=&quot;_blank&quot;&gt;CSS Regions Module Level 1&lt;/a&gt; has published as a Working Draft, and it means that the specification is still in very early stage and need to be reviewed. Currently, this is only supported on Safari 6.1+ and iOS Safari 7, also the latest Chrome with the flag enabled. It is probably too early to use for your production in this moment, but I am pretty excited the possibility of more creative web designs. Adobe is leading in this spec and has some excellent demos on &lt;a href=&quot;http://html.adobe.com/webplatform/layout/regions/&quot; title=&quot;Adobe &amp;#038; HTML5&quot; target=&quot;_blank&quot;&gt;their page&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;My demo on CodePen (&lt;a href=&quot;http://codepen.io/girliemac/pen/LbAFq&quot; title=&quot;CodePen&quot; target=&quot;_blank&quot;&gt;http://cdpn.io/LbAFq&lt;/a&gt;) shows the simple magazine-like layout (mix and match with single, and multi-columns with a image) for desktop-sized browser. The complicated layout is definitely not suitable for small screens, so the simplified layout is used for small screens, using media-queries.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://girliemac.github.io/presentation-slides/html5-mobile-approach/images/fluid-layout/regions-mobile.png&quot; style=&quot;height:400px;display:inline-block&quot; /&gt; &lt;img src=&quot;http://girliemac.github.io/presentation-slides/html5-mobile-approach/images/fluid-layout/regions-tablet.png&quot; style=&quot;height:400px;display:inline-block&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;region region1&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;region region2&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/section&amp;gt;&lt;/span&gt;      
...     
&lt;span class=&quot;nt&quot;&gt;&amp;lt;article&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;content here...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/article&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;flow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;into&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.region&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;flow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;400px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;nc&quot;&gt;.content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;into&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;  
    &lt;span class=&quot;nc&quot;&gt;.region&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I omitted the vender prefix in the code sample, however, you do need &lt;code&gt;-webkit&lt;/code&gt; prefix for Safari and Chrome for now. As you can see in my code sample, there are a few empty &lt;code&gt;sections&lt;/code&gt;, separated from the actual text content in &lt;code&gt;article&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;section&lt;/code&gt;s are where the content will be flown into, and the sections can be stylized in any ways you want. To achieve the &amp;#8220;regions&amp;#8221; layout, you need to:&lt;/p&gt;

&lt;p&gt;(1) specify the contents with &lt;code&gt;flow-into&lt;/code&gt; property with the value as a name, where you see foo in the code sample. This name of your choice defines the named flow, which the contents will be laid out in the region chain associated with that named flow.&lt;br&gt;
(2) specify the layout region with &lt;code&gt;flow-from&lt;/code&gt; property with the same name you just defined (foo in my sample code). It makes the region as a block container, and associates it with a named flow.&lt;/p&gt;

&lt;p&gt;To make this layout responsive, cancel the the region layout is defined for the desktop, by giving the value &lt;code&gt;none&lt;/code&gt; for the &lt;code&gt;flow-into&lt;/code&gt;. Also hide the presentational empty sections with &lt;code&gt;display: none;&lt;/code&gt; for the small screen.&lt;/p&gt;

&lt;p&gt;By the way, you may have noticed the I use &lt;code&gt;-ms&lt;/code&gt; prefix in my Codepen demo, although this demo does not work as expected on IE. The support in IE 10+ is limited to used an iframe as a content source.&lt;/p&gt;

&lt;h2&gt;Grid Layout&lt;/h2&gt;

&lt;p&gt;The CSS Grid Layout module is also still in Editor&amp;#8217;s Draft status. It defines two-dimensional grid-based layout system. With the module, we will be able to align elements into columns and rows just like tables, but without the content structure that table has.&lt;/p&gt;

&lt;p&gt;Actually, I have not created any working samples because the grids specification its going through major changes. It is far from stable and no browsers has implemented the current specs, although IE10+ supports the limited (original) specs. &lt;/p&gt;

&lt;p&gt;When supported, we can create responsive grid layout by rearranging grids like this diagrams (from W3C specification page).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://girliemac.github.io/presentation-slides/html5-mobile-approach/images/fluid-layout/grid-portrait.png&quot; style=&quot;display:inline-block&quot; /&gt; &lt;img src=&quot;http://girliemac.github.io/presentation-slides/html5-mobile-approach/images/fluid-layout/grid-landscape.png&quot; style=&quot;display:inline-block&quot; /&gt;&lt;/p&gt; &lt;/p&gt;

&lt;h2&gt;Shameless Plug&lt;/h2&gt;

&lt;p&gt;This article was actually from a part of my talk on the current state and future of the Web standards on Responsive Web development. Besides the fluid layout topic, I covered media-queris, high DPI screens, and responsive images as well. It&amp;#8217;s a long talk but if you don&amp;#8217;t easily get bored of long talks, you can watch it on &lt;a href=&quot;http://youtu.be/OIkF_ADBGBA&quot; target=&quot;_blank&quot;&gt;YouTube&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/1330446/images/tomomi-youtube.png&quot; alt=&quot;me on YouTube&quot; style=&quot;width:100%&quot; /&gt;  &lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;CSS Multi-column Layout Module: &lt;a href=&quot;http://www.w3.org/TR/css3-multicol/&quot; target=&quot;_blank&quot;&gt;http://www.w3.org/TR/css3-multicol/&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;CSS Flexible Box Layout Module: &lt;a href=&quot;http://www.w3.org/TR/css3-flexbox/&quot; target=&quot;_blank&quot;&gt;http://www.w3.org/TR/css3-flexbox/&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;CSS Regions Module Level 1: &lt;a href=&quot;http://www.w3.org/TR/css3-regions/&quot; target=&quot;_blank&quot;&gt;http://www.w3.org/TR/css3-regions/&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;CSS Grid Layout Module Level 1: &lt;a href=&quot;http://dev.w3.org/csswg/css-grid/&quot; target=&quot;_blank&quot;&gt;http://dev.w3.org/csswg/css-grid/&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Regions (by Adobe &amp;#038; HTML5): &lt;a href=&quot;http://html.adobe.com/webplatform/layout/regions/&quot; target=&quot;_blank&quot;&gt;http://html.adobe.com/webplatform/layout/regions/&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Can I Use...: &lt;a href=&quot;http://caniuse.com/&quot; target=&quot;_blank&quot;&gt;http://caniuse.com/&lt;/a&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;Grid Layout (by Internet Explorer Dev Center): &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ie/hh673533(v=vs.85).aspx&quot; target=&quot;_blank&quot;&gt;http://msdn.microsoft.com/en-us/library/ie/hh673533(v=vs.85).aspx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[More Blah Blah on Legacy Clients]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2013/09/30/legacy-clients/" />
	  <id>http://girliemac.com/blog/2013/09/30/legacy-clients</id>
	  <updated>2013-09-30T00:00:00-07:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;Last week in New York City, I could feel the beginning of autumn. I was fortunate to be on stage at with amazing people at Google NYC office for &lt;a href=&quot;http://edgeconf.com/2013-nyc/&quot; target=&quot;_blank&quot;&gt;EDGE Conference&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Unlike any other tech conferences I have attended, EDGE Conf has a unique format- each session starts with a short presentation in the beginning, then proceeds a panel discussion in a cutting edge topic. I was a one of the panelists for &lt;em&gt;Legacy Clients&lt;/em&gt; to talk about old browsers and less capable browsers, as well as topics on progressive enhancement.&lt;/p&gt;

&lt;p&gt;During the panel, we got fascinating audience participations, and for a moment, the panel became a hissy fit of defending/attacking Internet Explorer for a moment, and it was amusing and I was watching them while almost forgetting I was in a panel. At the same time, I realized I totally failed to express my opinions in lesser capable browsers, which are not IE.&lt;/p&gt;

&lt;p&gt;You can watch the whole panel on &lt;a href=&quot;http://www.youtube.com/watch?v=zCDcmit5-fE&amp;#038;feature=share&amp;#038;list=SPNYkxOF6rcIAhg58YwoKFHDsVBCUtNFMj&quot; target=&quot;_blank&quot;&gt;YouTube&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Crappy Old Browsers&lt;/h3&gt;

&lt;p&gt;As you probably know me already, I have been in mobile field for quite a long time. I am less familiar with IE 8 and older than many of you, because there is no such thing in mobile- the oldest IE for Windows Phone is version 9. Yes, there are older IE for mobile- The older Windows Mobile came with &lt;strong&gt;Pocket IE&lt;/strong&gt; (PIE), which used a different rendering engine and was nothing like the desktop equivalent. I think the last time I&amp;#8217;ve heard the PIE was when &lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Microsoft_Kin&quot; target=&quot;_blank&quot;&gt;Microsoft KIN&lt;/a&gt;&lt;/em&gt; was released (then killed instantaneously).&lt;/p&gt;

&lt;p&gt;I have worked on thousands of mobile browsers in past (especially, when I was working for Yahoo!&amp;#8217;s mobile sites), and thank god, there was &lt;a href=&quot;http://wurfl.sourceforge.net&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;WURFL&lt;/em&gt;&lt;/a&gt;. Back in the time, when the most popular browsers included Nokia&amp;#8217;s &lt;strong&gt;S60 WebKit&lt;/strong&gt;, &lt;strong&gt;Blackberry browser&lt;/strong&gt; (pre-WebKit), Motorola &lt;strong&gt;Razr browser&lt;/strong&gt;&amp;#8230; JavaScript wasn&amp;#8217;t really a thing for mobile. Client-side feature detection was no existent. The browser detection was all done in server-side, and the features and capabilities were pulled from the WURFL data that associated with the user-agents. Yes, there were mobile web standards like XHTML-MP, however, mobile browsers supported and implemented them poorly, and each browser behaved totally differently. &lt;/p&gt;

&lt;p&gt;Also, the server-side manipulation was necessary for the headache-inducing error &lt;a href=&quot;http://www.flickr.com/photos/girliemac/6508023747/&quot; target=&quot;_blank&quot;&gt;413&lt;/a&gt; (&lt;em&gt;&amp;#8220;Request entity too large&amp;#8221;&lt;/em&gt;) problem. Believe or not, for example on Yahoo! News, many browsers were not even capable to display one news story because the content size was too large. To avoid this unpleasant experience to the users, the contents needed to be trimmed in server.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/09/yahoo_beta_xhtml.png&quot; alt=&quot;legacy&quot; title=&quot;Yahoo!&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Screenshots of m.yahoo.com that I worked on. Awwww, nostalgia.&lt;/small&gt;&lt;/p&gt;

&lt;h3&gt;Crappy New Browsers Hidden within Native Apps&lt;/h3&gt;

&lt;p&gt;OK, so we don&amp;#8217;t live in 2007 anymore. Can we forget the old mobile browsers? People upgrade their mobile phones in every one years or so, right?&lt;/p&gt;

&lt;p&gt;Yeah.&lt;br&gt;
But you know that Android stock browsers are the new IE6.&lt;/p&gt;

&lt;p&gt;And even worse, many of the &amp;#8220;native apps&amp;#8221; are actually hybrid apps, or using the &lt;strong&gt;embedded browser&lt;/strong&gt; (&lt;em&gt;WebView&lt;/em&gt;, or &lt;em&gt;UIWebView&lt;/em&gt; for iOS) intensively. For instance, a large portion of Facebook app is built on top of the web technology, using the WebView, apparently.&lt;br&gt;
These embedded browsers are likely to be less capable than the actual mobile browsers installed on devices. You may be using &lt;strong&gt;Chrome&lt;/strong&gt; on Android phone to browse web, but Andorid apps&amp;#8217; WebView is not Chrome.&lt;br&gt;
The same for iOS- iOS&amp;#8217;s UIWebView is not &lt;strong&gt;Safari&lt;/strong&gt;, and it does not use the same JavaScript engine. You can&amp;#8217;t expect the same rendering or performance on the embedded browsers.&lt;/p&gt;

&lt;p&gt;You may not be writing native apps using WebView, but your web pages may be visited from some apps within the browsers.&lt;/p&gt;

&lt;h3&gt;Pseudo Browsers&lt;/h3&gt;

&lt;p&gt;Sure, Google &lt;strong&gt;Chrome&lt;/strong&gt; for Android is a &lt;em&gt;real&lt;/em&gt; browser, however, &amp;#8220;Chrome&amp;#8221; for iOS is not.&lt;br&gt;
Due to the Apple&amp;#8217;s licensing restriction for their iOS apps, Google cannot ship a real browser, but instead, they ship this Chrome-like browser, which is really just a UIWebView.&lt;br&gt;
All other browsers available for iOS are pseudo-browsers as well. &lt;/p&gt;

&lt;h3&gt;Proxy Browsers&lt;/h3&gt;

&lt;p&gt;There is another type of browsers, called &lt;em&gt;proxy browsers&lt;/em&gt;. (The marketing term is cloud-accelerated browsers). The most well-known proxy browser is probably &lt;a href=&quot;http://www.opera.com/mobile/mini&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Opera Mini&lt;/strong&gt;&lt;/a&gt;. Nokia also has Nokia &lt;a href=&quot;http://betalabs.nokia.com/trials/nokia-xpress-internet&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Xpress&lt;/strong&gt;&lt;/a&gt;, which uses Gecko rendering engine in server, and &lt;a href=&quot;http://amazonsilk.wordpress.com/&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;Silk&lt;/strong&gt;&lt;/a&gt; browser for Kindle from Amazon.&lt;/p&gt;

&lt;p&gt;Proxy servers fetches the requested content, applies content adaptation and compression, and returns a formatted and compressed representation of the requested page to the browser client. &lt;/p&gt;

&lt;p&gt;What great about the browsers are that they are super lightweight, can run on feature phones, saves data transfer time and cost if you pay per data, or when you are traveling, you can save the expensive roaming fee. The degree of the optimizations and compression varies &amp;#8211; Opera Mini and Nokia Express do more aggressively (Let&amp;#8217;s say, as much as 90% compression) than Silk.&lt;br&gt;
On Opera Mini and Nokia Xpress, JavaScript and most CSS are executed on the proxy rather than the client side. For example, Accordions UX will not expand and collapse without a roundtrip to the server.&lt;br&gt;
Amazon Silk execute JavaScript partially on server, partially on client-side. I have no idea how the browser determines&amp;#8230;&lt;/p&gt;

&lt;p&gt;You may not care about these browsers, but keep in your mind that Opera Mini has 300 million, and Nokia Xpress has 80 million active users in the world.&lt;br&gt;
Popular sites like Facebook has enormous numbers of access from these browsers, especially in Asia and Africa.&lt;/p&gt;

&lt;p&gt;While I tried to find the stats, I came across with this article, &lt;em&gt;&lt;a href=&quot;http://gigaom.com/2013/01/24/why-operas-lightweight-mini-browser-is-growing-faster-than-ever-before/&quot; target=&quot;_blank&quot;&gt;&amp;#8220;Why Opera’s lightweight Mini browser is more popular than ever&amp;#8221;&lt;/a&gt;&lt;/em&gt;. &lt;/p&gt;

&lt;h3&gt;Progressive Enhancement and Graceful Degradation&lt;/h3&gt;

&lt;p&gt;To design mobile web inclusively, the first thing you need to care is to determine the &lt;em&gt;lowest common denominator&lt;/em&gt;. The core experience to serve virtually all browsers includes contents, semantic markup, and basic styling.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/09/lowest-common.png&quot; alt=&quot;browser lowest common denominator&quot; width=&quot;451&quot; height=&quot;333&quot; class=&quot;aligncenter size-full wp-image-781&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On top of the core experiences, you can use all the fancy pants CSS3 and JavaScript, yet your web must degrade gracefully for less capable browsers. We always should keep in mind that it is OK to fail, but just let them fail without losing any core functionality and contents. It is completely OK to not give the rounded corners to your UI objects. Your web is still functional on the less-capable browsers. &lt;/p&gt;

&lt;p&gt;Another example of using fallback to support less-capable browsers is when you are trying to achieve responsive design, keep in mind some browsers don&amp;#8217;t understand the media queries. so make the one with the lowest common denominator outside of the media queries.&lt;/p&gt;

&lt;p&gt;If the UI is progressively enhanced, for instance, CSS3 gradient background is applied, make sure to set the solid color. Progressive Enhanced design should degrade gracefully too. Let&amp;#8217;s say, you have a dark background (black to gray gradient) and white text, don&amp;#8217;t forget to set the solid color, otherwise the background turns white (default color on most browsers), and the text is invisible on the browsers that don&amp;#8217;t support the CSS.&lt;/p&gt;

&lt;p&gt;Also, the idea of the progressive enhancement and graceful degradation can be applied to more than just browsers- faster connection speed and greater bandwidth allow us to serve more advanced experiences. On the other hand, when the connection speed is slow, progressive loading matters a lot. Imagine when the web page is constructed mostly by DOM manipulation and almost no markups. How painful it can be when you are waiting for some contents to load.&lt;/p&gt;

&lt;p&gt;How about the polyfill?&lt;br&gt;
I mentioned this at the conference, but it is important so I say it again- &lt;em&gt;just because you can use a polyfill doesn’t mean you should&lt;/em&gt;. Well, actually this is a quote from &lt;a href=&quot;http://modernizr.com/docs/&quot; target=&quot;_blank&quot;&gt;Modernizer documentation&lt;/a&gt;. You need to think when to use polyfill wisely. Giving the same exact experience to all browsers is not always a good idea. Who cares if your button has drop shadow or not, when it is costing the performance.&lt;/p&gt;

&lt;p&gt;Again, &amp;#8220;Supporting&amp;#8221; doesn&amp;#8217;t have to mean that giving all users the same exact experiences. It is OK to give less prettier UI but must be functional. You are not working to please your designers, but your users!&lt;/p&gt;

&lt;p&gt;I remember that we were having a discussion on polyfill &lt;a href=&quot;http://farm8.staticflickr.com/7340/9113795288_fc5299ef09.jpg&quot; target=&quot;_blank&quot;&gt;by fire at JS Conf&lt;/a&gt;, and one drunk dude was saying &amp;#8220;Polyfill is not a progressive enhancement but it&amp;#8217;s an aggressive enhancement! No, wait! it is a &lt;em&gt;passive-aggressive enhancement&lt;/em&gt;!&amp;#8221;&lt;br&gt;
LOL, but it is true, when you aggressively use polyfills, some browsers show the passive-aggressiveness by being stubborn and resisting to render in timely manner.&lt;/p&gt;

&lt;h3&gt;Ever-changing Mobile World&lt;/h3&gt;

&lt;p&gt;Now, I am getting nostalgic about the old mobile phones, especially things have been changed a lot these days- Motorola (Mobility) was acquired by Google, Nokia&amp;#8217;s smart phone devision is going to be taken by Microsoft soon, and Blackberry is going private.&lt;br&gt;
The mobile phone that never existed prior to 2007 are now the mainstream.&lt;br&gt;
Nobody can predict what happens in mobile world in 5 years. Maybe Tesla will be making some super awesome phones with crazy fast browser. Who knows.&lt;br&gt;
We need to prepare for this unknown future. We need to future-proof the mobile web.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/09/my-phones.png&quot; alt=&quot;mobile phones&quot; width=&quot;100%&quot; class=&quot;aligncenter size-full wp-image-796&quot; /&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[W3C Events in Tokyo &#8211; Lost in Translation, Not!]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2013/06/23/tokyo/" />
	  <id>http://girliemac.com/blog/2013/06/23/tokyo</id>
	  <updated>2013-06-23T00:00:00-07:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;Soon after coming back from sunny Florida for JS Conf, I flew to Tokyo for two public events by W3C, &lt;strong&gt;Test The Web Forward&lt;/strong&gt; and &lt;strong&gt;Developer Meetup&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This was a rare opportunity to gather W3C people, W3C members of participating companies from all over the world, and local developers gathered in one place. And, it must be super rare that it happens in Tokyo, where non-English speakers and non-Japanese speakers unite.&lt;/p&gt;

&lt;h2&gt;Test The Web Forward Tokyo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://testthewebforward.org/events/tokyo-2013.html&quot; title=&quot;Test The Web Forward Tokyo&quot; target=&quot;_blank&quot;&gt;Test The Web Forward&lt;/a&gt; is a part of the larger Move The Web Forward initiative to get developers more involved in contributing to the web platform they help define by writing tests. The events are mainly organized by Adobe, also other browser vendors like Google and Microsoft, and has been hold worldwide.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;http://farm4.staticflickr.com/3757/9111904829_2d9c902c39.jpg&quot; alt=&quot;testtwf&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Test The Web Forward Tokyo was organized by Adobe crews (Rebecca, Larry and Isra) from San Francisco, and hosted by Google Japan (Eiji, Fumi, et al.) at their fancy Roppongi Hills office, and I was honored to be there an a one of the experts! &lt;/p&gt;

&lt;p&gt;The language barrier in Japan is larger than you probably imagine. Therefore, all the presentations done in English was done along with interpreters. Since I am a native Japanese speaker, naturally, my main role there was helping Japanese developers to communicate with W3C experts while writing tests so nobody gets lost in translation! &lt;/p&gt;

&lt;p&gt;After a while, I noticed I no longer need to go between devs and experts when everybody started writing tests. Code is a universal language for geeks like us!&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;http://farm4.staticflickr.com/3736/9114726406_c780f5ba26.jpg&quot; alt=&quot;html5 sushi!&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;OMG, HTML5 sushi!!!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The event was so successful that we ended up getting 609 tests! This beat Seattle&amp;#8217;s record, and the best record so far!&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Test count for &lt;a href=&quot;https://twitter.com/search?q=%23TestTWF&amp;amp;src=hash&quot;&gt;#TestTWF&lt;/a&gt; Tokyo 609!!! &lt;a href=&quot;https://twitter.com/search?q=%23html5j&amp;amp;src=hash&quot;&gt;#html5j&lt;/a&gt;&lt;/p&gt;&amp;mdash; testthewebfwd (@testthewebfwd) &lt;a href=&quot;https://twitter.com/testthewebfwd/statuses/343296553735290880&quot;&gt;June 8, 2013&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/assets/images/wp-content/uploads/2013/06/testtwf-tokyo.jpg&quot; alt=&quot;testtwf-tokyo&quot; width=&quot;500&quot; /&gt;
&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Developer Events&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;http://www.w3.org/2013/06/meetup-Tokyo-ja.html&quot; title=&quot;Dev Meetup&quot; target=&quot;_blank&quot;&gt;W3C Developer Event&lt;/a&gt; was organized by W3C and HTML5j, and hosted by a Japanese gaming company, GREE, at the same building, Mori Tower in Roppongi Hills.&lt;/p&gt;

&lt;p&gt;It was the first W3C public event in Japan, also in very &amp;#8220;Only in Japan&amp;#8221; theme. LOL! See the photo below of Marie-Claire from W3C dress in Doraemon (a cat-shaped robot character in a popular anime). She demonstrated &amp;#8220;When in Japan, do as the Japanese do&amp;#8221; amazingly well.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;http://farm8.staticflickr.com/7289/9111928331_9db43391bc.jpg&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;At this event, I gave a shorter version of the preso about the HTML5 use-cases using CoreMob Camera project I&amp;#8217;ve spoke at W3Conf in San Francisco, and the app that I had demo&amp;#8217;d at MWC in Barcelona.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;/assets/images/wp-content/uploads/2013/06/IMG_0574-300x199.jpg&quot; alt=&quot;Tomomi speaking at W3C Dev Meetup&quot; width=&quot;500&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Initially, I thought I was going to speak in Japanese since this is a Tokyo event, however, I actually did in English with a real-time text-translation service, done with Google Translation API. (See the display behind me in the photo above!) It was a quite interesting experience for me!&lt;/p&gt;

&lt;p&gt;Also, I participated a panel discussion to talk how Japanese developers can contribute to help W3C. At the panel, I pointed that contributing directly to W3C is not a easy task so I asked the audiences to help friends and communities rather than writing specifications. Oh by the way, I spoke Japanese by popular demand! and the English text translation was given this time!&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;/assets/images/wp-content/uploads/2013/06/IMG_0677-300x199.jpg&quot; alt=&quot;panel discussion&quot; width=&quot;500&quot; /&gt;
&lt;/div&gt;

&lt;h2&gt;Party Time&lt;/h2&gt;

&lt;p&gt;So much food and drink were provided including W3C cake! I was too busy catching up friends and meeting new people so I hardly tasted any of the fancy food!&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
  &lt;img src=&quot;/assets/images/wp-content/uploads/2013/06/IMG_0790-300x199.jpg&quot; alt=&quot;W3C cake&quot; width=&quot;500&quot; /&gt;
&lt;/div&gt;

&lt;h2&gt;More Videos, Pics and Blogs&lt;/h2&gt;

&lt;p&gt;The both events were very successful, and we all had huge fun! We had some crazy Roppongi experiences after the events.&lt;/p&gt;

&lt;p&gt;There are more fun photos and blogs (mostly in Japanese tho) by other participants:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href=&quot;http://www.youtube.com/watch?v=yFq3B5K4R3s&quot; target=&quot;_blank&quot;&gt;Day 1 on YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://www.youtube.com/watch?v=ccSM5bI1q2w&quot; target=&quot;_blank&quot;&gt;Day 2 on YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://youtu.be/NANVD7jDJD4&quot; target=&quot;_blank&quot;&gt;W3C Developer Meetup on YouTube (List)&lt;/a&gt; 

&lt;ul&gt;
&lt;li&gt;  &lt;a href=&quot;https://plus.google.com/events/cbnnd183320n38e6nch0h0gm3gs&quot; target=&quot;_blank&quot;&gt;TestTWF Tokyo event page on Google+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://plus.adobe-adc.jp/post-3208/&quot; target=&quot;_blank&quot;&gt;Web標準をテストするハッカソン –「Test The Web Forward」がついに東京に上陸&lt;/a&gt; by Adobe Japan&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://fumit.blogspot.com/2013/06/test-web-forward-testtwf.html&quot; target=&quot;_blank&quot;&gt;Test the Web Forward を開催しました！&lt;/a&gt; by Fumi&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://www.atmarkit.co.jp/ait/articles/1306/19/news010.html&quot; target=&quot;_blank&quot;&gt;日本の開発者へのエール、HTML5標準化貢献への期待を語る～W3C Developer Meetup &amp;#8211; Tokyo 2013レポート&lt;/a&gt; by @IT/Kensaku Komatsu&lt;/ul&gt; 
I had too much fun there. Please invite me again!!!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[JS Conf US Slide &#8211; JS APIs for Hardware Access]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2013/06/23/js-conf-2013/" />
	  <id>http://girliemac.com/blog/2013/06/23/js-conf-2013</id>
	  <updated>2013-06-23T00:00:00-07:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;I don&amp;#8217;t usually consider myself as a jetsetter, however, the past months of May and June had been crazy &amp;#8211; I went to Amsterdam (&lt;a href=&quot;http://www.flickr.com/photos/girliemac/sets/72157634276296080/&quot; title=&quot;Flickr&quot; target=&quot;_blank&quot;&gt;my Flickr photos&lt;/a&gt;) for &lt;a href=&quot;http://mobilism.nl/2013&quot; target=&quot;_blank&quot;&gt;Mobilism&lt;/a&gt;, Amelia Island (North part of Florida) for &lt;a href=&quot;http://2013.jsconf.us/&quot; target=&quot;_blank&quot;&gt;JS Conf&lt;/a&gt; (&lt;a href=&quot;http://www.flickr.com/photos/girliemac/sets/72157634277192086/&quot; target=&quot;_blank&quot;&gt;Flicker&lt;/a&gt;), then Tokyo for a few events (I will write up soon).&lt;/p&gt;

&lt;p&gt;JS Conf was more of a vacation, a big geek fun. We all stayed at a beach resort and had a lot of fun hacking and partying.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm8.staticflickr.com/7340/9113795288_fc5299ef09.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;At the JS Conf, I managed myself to get a speaking slot for the track B, and had a chance to speak about HTML5&amp;#8242;s JavaScript APIs to access hardware on (mostly on) mobile.&lt;br&gt;
But I felt like I should&amp;#8217;ve talked more obscured APIs (the ones being proposed and not yet standardized) too, and better demo since the audiences at JS Conf were elite hackers and seem to already know everything I&amp;#8217;ve mentioned.&lt;br&gt;
You know, the chance was super high at JS Conf, when you randomly stand next to somebody and drink beer with, and they are well-known node.js rockstars or authors of some JS frameworks you&amp;#8217;ve used. I had some &amp;#8220;I am not worthy!!!&amp;#8221; &lt;a href=&quot;http://jptribe.files.wordpress.com/2013/02/princess_luna_we__re_not_worthy_by_grumbeerkopp-d4q9z6k.png&quot; target=&quot;_blank&quot;&gt;moment&lt;/a&gt;.&lt;/p&gt;

&lt;script async class=&quot;speakerdeck-embed&quot; data-id=&quot;5d2d1e30be900130ea357a88d349362c&quot; data-ratio=&quot;1.6&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;The embedded slide deck here is converted from the original slides in HTML so if you&amp;#8217;d prefer the original, I have it on &lt;a href=&quot;http://girliemac.github.io/presentation-slides/html5-mobile-approach/deviceAPIs.html&quot; target=&quot;_blank&quot;&gt;github&lt;/a&gt;!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[Touchy-Feely with DOM Events: Rethinking Cross-Device User Interaction]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2013/04/17/touchy-feely-with-dom-events-rethinking-cross-device-user-interaction/" />
	  <id>http://girliemac.com/blog/2013/04/17/touchy-feely-with-dom-events-rethinking-cross-device-user-interaction</id>
	  <updated>2013-04-17T00:00:00-07:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;&lt;em&gt;This article was originally written for &lt;a href=&quot;http://www.developer.nokia.com/Blogs/Code/2013/04/02/touchy-feely-with-dom-events-rethinking-cross-device-user-interaction/&quot; target=&quot;_blank&quot;&gt;Nokia Code Blog&lt;/a&gt; on the earlier this month, and I am re-posting it here with a permission.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;There have been numerous ways for users to interact with web pages on mobile phones. Historically, users navigated the mobile web by pressing physical buttons (arrow keys, soft keys, etc.), while some devices required a stylus.&lt;/p&gt;

&lt;p&gt;In last several years, devices with touch-enabled screens have been adopted at such a rapid rate that the touch interaction has become ubiquitous. Now we have tablets that take input not only from touch, but from keyboards and mousepads using optional peripherals.&lt;/p&gt;

&lt;p&gt;So what does it mean to you as a web developer? It means you need to detect the correct user input method, and design the correct user experience into your web apps.&lt;/p&gt;

&lt;p&gt;In this article, I will explain the state of touch APIs in terms of current web standards, and show you some sample code to demonstrate.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2013/04/touch-lumia920.jpg&quot; alt=&quot;demo on Lumia&quot; title=&quot;Touch demo on Lumia 920&quot;&gt;&lt;/p&gt;

&lt;h2&gt;Touch Events V.1&lt;/h2&gt;

&lt;p&gt;The touch interface was widely popularized when Apple&amp;#8217;s iPhone came out, and the DOM touch event was also defined and implemented first on iOS Safari by Apple. Since then, it has been adopted by other browser vendors like Google and Mozilla, as well as web developers as the &lt;em&gt;de-facto&lt;/em&gt; standard.&lt;/p&gt;

&lt;p&gt;W3C defined the &lt;a href=&quot;http://www.w3.org/TR/touch-events/&quot; target=&quot;_blank&quot;&gt;touch events specification&lt;/a&gt; as a set of low-level events that represent one or more points of contact with a touch-sensitive surface, as well as changes to those points with respect to the surface and any DOM elements displayed on or associated with it.&lt;/p&gt;

&lt;p&gt;The event types include: &lt;code&gt;touchstart&lt;/code&gt;, &lt;code&gt;touchend&lt;/code&gt;, &lt;code&gt;touchmove&lt;/code&gt;, &lt;code&gt;touchenter&lt;/code&gt;, &lt;code&gt;touchleave&lt;/code&gt; and &lt;code&gt;touchcancel&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2013/04/touchevents.png&quot; alt=&quot;Touch events&quot; title=&quot;Touch events&quot;&gt;&lt;/p&gt;

&lt;h3&gt;Example&lt;/h3&gt;

&lt;p&gt;The following code snippet, used in &lt;a href=&quot;https://dl.dropbox.com/u/1330446/demo/touch-events.html&quot; target=&quot;_blank&quot;&gt;this example demo&lt;/a&gt;, determines the position (in pixel coordinates) of a finger within a canvas element when a touch action is initiated by the user.&lt;/p&gt;

&lt;p&gt;The demo tracks a user&amp;#8217;s touch points, allowing the user to draw on a kitty cat (in &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;). It will only work on browsers that supports touch events on touch-enabled devices. If you are trying it on a desktop using a mouse or trackpad, you&amp;#8217;ll notice that nothing happens on screen.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;drawCanvas&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;touchstart&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// canceling default behavior such as scrolling&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;targetTouches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;targetTouches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetTop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;U Can&amp;#8217;t Touch This&lt;/h2&gt;

&lt;p&gt;So how do you make it work on the desktop when touch events do not fire with a non-touch user input? To support mouse or trackpad events, you need to use the DOM &lt;code&gt;MouseEvents&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;mousedown&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layerX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layerY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetTop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So I wrote &lt;a href=&quot;https://dl.dropbox.com/u/1330446/demo/mouse-events.html&quot; target=&quot;_blank&quot;&gt;another demo&lt;/a&gt; to demonstrate this.&lt;/p&gt;

&lt;p&gt;This demo uses mouse events instead of the touch events, but not both types of events. Try it on a desktop browser and see how it works, and then see how it fails on touch-enabled devices.&lt;/p&gt;

&lt;p&gt;To make both user input methods work, you need to support both touch and mouse events together.&lt;br&gt;
When using &lt;code&gt;touchstart&lt;/code&gt;, &lt;code&gt;touchmove&lt;/code&gt;, and &lt;code&gt;touchend&lt;/code&gt;, you also need to implement using &lt;code&gt;mousedown&lt;/code&gt;, &lt;code&gt;mousemove&lt;/code&gt; and &lt;code&gt;mouseup&lt;/code&gt; respectively.&lt;/p&gt;

&lt;p&gt;The completed demo is at the end of this article.&lt;/p&gt;

&lt;h2&gt;Pointer Events&lt;/h2&gt;

&lt;p&gt;Now you probably wish there was a single set of events to handle both the iOS touch event model and the standard mouse events. Well, it turns out there really &lt;em&gt;is&lt;/em&gt; a such thing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2013/04/pointer.png&quot; alt=&quot;pointer&quot; width=&quot;264&quot; height=&quot;272&quot; align=&quot;right&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Microsoft has been working on something called MSPointers to support multi user-inputs, and they &lt;a href=&quot;http://www.w3.org/TR/pointerevents&quot; target=&quot;_blank&quot;&gt;submitted&lt;/a&gt; it to the W3C for standardization last year. Now it has reached the Last Call. This new and alternative standard event model is called Pointer Events, and it is designed to handle hardware-agnostic pointer input from devices like a mouse, pen, or touchscreen.&lt;/p&gt;

&lt;p&gt;Besides Microsoft, Nokia, Google and Mozilla, are among the industry members working to solve this problem in the W3C Pointer Events Working Group.&lt;/p&gt;

&lt;p&gt;This feature has been implemented already in Internet Explorer 10, and has been prototyped in the experimental version of Chromium.&lt;/p&gt;

&lt;p&gt;The simple example below gets the x and y pointer coordinates using the pointer events. You will probably notice that the code looks similar to mouse events, which you may find less cumbersome compared with the touch events v1.&lt;br&gt;
&lt;br style=&quot;clear:both&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;pointerdown&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layerX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layerY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetTop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;To support Internet Explorer 10 you need to use the prefixed version, so &lt;code&gt;pointerdown&lt;/code&gt;, &lt;code&gt;pointermove&lt;/code&gt; and &lt;code&gt;pointerup&lt;/code&gt; event handler event types should be written as &lt;code&gt;MSPointerDown&lt;/code&gt;, &lt;code&gt;MSPointerMove&lt;/code&gt; and &lt;code&gt;MSPointerUP&lt;/code&gt; respectively.&lt;/p&gt;

&lt;p&gt;So &lt;a href=&quot;https://dl.dropbox.com/u/1330446/tests/pointer-events.html&quot; target=&quot;_blank&quot;&gt;try this demo&lt;/a&gt; on IE10 on desktop and/or Windows Phone 8.&lt;/p&gt;

&lt;h2&gt;I &amp;lt;3 You All&lt;/h2&gt;

&lt;p&gt;As I mentioned earlier, at this moment the only available browsers that support the Pointer Events are IE10 and a prototype build of &lt;a href=&quot;http://appendto.com/blog/2013/02/prototype-chromium-build-with-support-for-ms-pointer-events/&quot; target=&quot;_blank&quot;&gt;Chromium&lt;/a&gt;, so it&amp;#8217;s a good idea to include iOS touch events and mouse events until other browsers catch up.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;downEvent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isTouchSupported&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;touchstart&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isPointerSupported&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;MSPointerDown&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;mousedown&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;downEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isTouchSupported&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;targetTouches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layerX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetLeft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isTouchSupported&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;targetTouches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetTop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layerY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetTop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I have a &lt;a href=&quot;https://dl.dropbox.com/u/1330446/demo/all-events.html&quot; target=&quot;_blank&quot;&gt;demo that supports all the methods&lt;/a&gt; I&amp;#8217;ve mentioned in the article.&lt;/p&gt;

&lt;p&gt;Try this on any modern browser, and it should work! The entire code is &lt;a href=&quot;https://gist.github.com/girliemac/5279460&quot; target=&quot;_blank&quot;&gt;in this gist&lt;/a&gt; for you to take a look at.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Screnshot&quot; src=&quot;/assets/images/articles/2013/04/wp_ss_20130330_0001.png&quot; width=&quot;320&quot; style=&quot;float:left&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2013/04/qr-pointer-demo.png&quot; alt=&quot;QR code&quot; width=&quot;129&quot; height=&quot;127&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;&lt;br style=&quot;clear:both&quot; /&gt;&lt;/h2&gt;

&lt;h2&gt;Learn More&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  W3C: &lt;a href=&quot;http://www.w3.org/TR/touch-events/&quot; target=&quot;_blank&quot;&gt;Touch Events version 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  MDN: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/Touch_events&quot; target=&quot;_blank&quot;&gt;Touch events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  W3C: &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Events/#events-mouseevents&quot; target=&quot;_blank&quot;&gt;Document Object Model (DOM) Level 3 Events Specification &amp;#8211; Mouse Event Types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  W3C: &lt;a href=&quot;http://www.w3.org/TR/pointerevents/&quot; target=&quot;_blank&quot;&gt;Pointer Events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  MSDN: &lt;a href=&quot;http://http://msdn.microsoft.com/en-us/library/ie/hh673557(v=vs.85).aspx&quot; target=&quot;_blank&quot;&gt;Pointer and gesture events&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[My Mobile HTML5 Talks Slides]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2013/04/16/my-mobile-html5-talks-slides/" />
	  <id>http://girliemac.com/blog/2013/04/16/my-mobile-html5-talks-slides</id>
	  <updated>2013-04-16T00:00:00-07:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;I have been really busy, in an awesome way-&lt;/p&gt;

&lt;p&gt;I have been working on a project called Coremob Camera, as a side project for &lt;a href=&quot;http://www.w3.org/community/coremob/&quot; target=&quot;_blank&quot;&gt;W3C Core Mobile Web Platform CG&lt;/a&gt; (I will write more about the project later), and spoke about the project as &lt;em&gt;Mobile Web: Real Life Examples of HTML5 for Mobile&lt;/em&gt; at &lt;a href=&quot;http://www.w3.org/conf/2013sf/&quot; target=&quot;_blank&quot;&gt;W3Conf&lt;/a&gt; on Feb 22nd, then flew very next day to Barcelona for &lt;a href=&quot;http://www.mobileworldcongress.com/&quot; target=&quot;_blank&quot;&gt;Mobile World Congress&lt;/a&gt; to &lt;a href=&quot;http://www.w3.org/2013/MWC/&quot; target=&quot;_blank&quot;&gt;join W3C&lt;/a&gt; to demo the Camera App.&lt;/p&gt;

&lt;p&gt;Coming back home, and had another talk on HTML5 Mobile Approaches at &lt;a href=&quot;https://plus.google.com/events/ci87mj5k218hh7md4h617q37848&quot; target=&quot;_blank&quot;&gt;Google DevFest&lt;/a&gt; Googleplex in Mountain View on March 15th, then I had done the HTML5 Use-Cases talk again at &lt;a href=&quot;http://html5devconf.com/&quot; target=&quot;_blank&quot;&gt;HTML5 Dev Conf&lt;/a&gt; in San Francisco. Each event gave me an amazing experience.&lt;/p&gt;

&lt;p&gt;Anyway, if you would like to see my slide decks, the interactive HTML-version (the ones I actually used for the presentations) are available on &lt;a href=&quot;https://github.com/girliemac/presentation-slides&quot; target=&quot;_blank&quot;&gt;github pages&lt;/a&gt; and the embeddable version and the PDFs are on &lt;a href=&quot;https://speakerdeck.com/girlie_mac&quot; target=&quot;_blank&quot;&gt;speakerdeck&lt;/a&gt;.&lt;/p&gt;

&lt;script async class=&quot;speakerdeck-embed&quot; data-id=&quot;9271c6d08909013050d812313d06f520&quot; data-ratio=&quot;1.6&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

&lt;script async class=&quot;speakerdeck-embed&quot; data-id=&quot;e7df3740890f013012ae22000a1cbfb9&quot; data-ratio=&quot;1.6&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;I will give the updated talk on the open-sourced camera app at an event in Tokyo in June (TBD), and O&amp;#39;Reilly &lt;a href=&quot;http://www.oscon.com/oscon2013/&quot; target=&quot;_blank&quot;&gt;OSCON&lt;/a&gt; in Portland, OR on July 26th!&lt;/p&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[How to Enable WP8 Emulator on Mac]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2013/01/09/how-to-enable-wp8-emulator-on-mac/" />
	  <id>http://girliemac.com/blog/2013/01/09/how-to-enable-wp8-emulator-on-mac</id>
	  <updated>2013-01-09T00:00:00-08:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;It appears to be that many Mac users, including myself, has had some trouble setting up Windows Phone SDK and run an WP emulator. I once gave up, but after spending some time searching and asking my coworkers around, I finally make Windows Phone 8 emulator runnable on my MacBook Pro, so before I totally forget how I did, I decide to blog and share it with you. (Notes: I am still on OS 10.7.5, on 2.4 GHz Intel Core MacBook Pro, with 8GB memory. and VMWare Fusion 4.1.4, not the latest.)&lt;/p&gt;

&lt;h2&gt;Install VMWare&lt;/h2&gt;

&lt;p&gt;First of all, Windows Phone 8 SDK is not available for Mac, so you need to create a virtual machine and install Windows 8 on your Mac. My choice is &lt;a href=&quot;http://www.vmware.com/products/fusion/overview.html&quot; target=&quot;_blank&quot;&gt;VMWare Fusion for Mac&lt;/a&gt;. Download and install it to get started.&lt;/p&gt;

&lt;h2&gt;Download Windows 8&lt;/h2&gt;

&lt;p&gt;You need to download &lt;strong&gt;Windows 8 &lt;em&gt;64 bits&lt;/em&gt; ISO&lt;/strong&gt;. You should be able to download the 90 days evaluation for developers from &lt;a href=&quot;http://msdn.microsoft.com/en-us/evalcenter/jj554510.aspx&quot; target=&quot;_blank&quot;&gt;Microsoft MSDN&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Create a virtual machine&lt;/h2&gt;

&lt;p&gt;Launch VMWare Fusion, and go to menu, &lt;strong&gt;File &amp;gt; New&lt;/strong&gt;. You should see a new dialog:&lt;br&gt;
&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm01.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm01.png&quot; alt=&quot;&quot; title=&quot;vm01&quot; width=&quot;600&quot; class=&quot;aligncenter size-full wp-image-633&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/iso-icon.png&quot; alt=&quot;&quot; title=&quot;iso-icon&quot; width=&quot;134&quot; height=&quot;124&quot; align=&quot;left&quot; size-full style=&quot;margin-right:1em&quot; wp-image-638&quot; /&gt;Go back to Finder, where you have downloaded Windows 8 iso, grab the iso icon and drag it into the dialog.&lt;br&gt;
&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm02.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm02.png&quot; alt=&quot;&quot; title=&quot;vm02&quot; width=&quot;600&quot; class=&quot;aligncenter size-full wp-image-641&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then click &lt;strong&gt;Continue&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm03.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm03.png&quot; alt=&quot;&quot; title=&quot;vm03&quot; width=&quot;600&quot; class=&quot;aligncenter size-full wp-image-644&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Leave them as-is, and click &lt;strong&gt;Continue&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm04a.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm04a.png&quot; alt=&quot;&quot; title=&quot;vm04a&quot; width=&quot;600&quot; class=&quot;aligncenter size-full wp-image-646&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Customize Settings&lt;/strong&gt; before finishing.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm05.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm05.png&quot; alt=&quot;&quot; title=&quot;vm05&quot; width=&quot;600&quot; class=&quot;aligncenter size-full wp-image-647&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Name the virtual machine. e.g. &amp;#8220;Windows 8&amp;#8243;, and click &lt;strong&gt;Save&lt;/strong&gt;. You should see the Setting dialog now.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm06a.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm06a.png&quot; alt=&quot;&quot; title=&quot;vm06a&quot; width=&quot;650&quot; class=&quot;aligncenter size-full wp-image-648&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, let&amp;#8217;s click the &lt;strong&gt;Processors &amp;#038; Memory&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm07.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm07.png&quot; alt=&quot;&quot; title=&quot;vm07&quot; width=&quot;650&quot; class=&quot;aligncenter size-full wp-image-651&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Confugure the CPU by choosing &lt;strong&gt;2 Processor Cores&lt;/strong&gt; from the first pull-down menu.&lt;br&gt;
Then increase memory. I chose 4096MB.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: If you&amp;#8217;re on VMWare Fusion 5, select &lt;strong&gt;Preferred virtualization engine: Intel VT-x with EPT option&lt;/strong&gt; at the Advanced setting below the memory setting, and skip the next step. &lt;a href=&quot;http://blogs.msdn.com/b/interoperability/archive/2012/12/21/how-to-develop-for-windows-phone-8-on-your-mac.aspx&quot; target=&quot;_blank&quot;&gt;See this article on MSDN&lt;/a&gt;.&lt;br&gt;
If you&amp;#39;re on VMWare Fusion 4.x like I do, follow the next step.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Show All&lt;/strong&gt; from top left to go back to the Setting menu, then click &lt;strong&gt;Advanced&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm08a.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm08a.png&quot; alt=&quot;&quot; title=&quot;vm08a&quot; width=&quot;650&quot; class=&quot;aligncenter size-full wp-image-652&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;Preferred Virtualization Engine&lt;/strong&gt;, choose &lt;strong&gt;Intel VT-x with EPT&lt;/strong&gt;.&lt;br&gt;
Close the Settings.&lt;/p&gt;

&lt;h2&gt;Configure VM&lt;/h2&gt;

&lt;p&gt;Now, before launching Windows 8, you need to tweak some Virtual Machine configuration.&lt;br&gt;
Exit VMWare.&lt;/p&gt;

&lt;p&gt;Then find your virtual machine, probably under &lt;code&gt;yourname/Documents/Virtual Machines/&lt;/code&gt;. It may or may not has the &lt;code&gt;.vmwarevm&lt;/code&gt; extension depending on your Mac setting.&lt;br&gt;
Ctrl-click and select &lt;strong&gt;Show Package Contents&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm09a.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm09a.png&quot; alt=&quot;&quot; title=&quot;vm09a&quot; width=&quot;656&quot; height=&quot;602&quot; class=&quot;aligncenter size-full wp-image-679&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you should find a &lt;code&gt;.vmx&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm10.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm10.png&quot; alt=&quot;&quot; title=&quot;vm10&quot; width=&quot;600&quot; class=&quot;aligncenter size-full wp-image-653&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Open the file with a text editor of your choice.&lt;br&gt;
Then add these lines:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash language-bash&quot; data-lang=&quot;bash&quot;&gt;hypervisor.cpuid.v0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;FALSE&amp;quot;&lt;/span&gt;
mce.enable &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;TRUE&amp;quot;&lt;/span&gt;
vhv.enable &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;TRUE&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm11.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm11.png&quot; alt=&quot;&quot; title=&quot;vm11&quot; width=&quot;650&quot;  class=&quot;aligncenter size-full wp-image-657&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Save it, then run the virtual machine.&lt;/p&gt;

&lt;h2&gt;Launch Windows 8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm12.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm12.png&quot; alt=&quot;&quot; title=&quot;vm12&quot; width=&quot;650&quot;  class=&quot;aligncenter size-full wp-image-658&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, you are going to need to set up your Windows 8. Go ahead and finish them all.&lt;/p&gt;

&lt;h2&gt;Install Windows Phone SDK&lt;/h2&gt;

&lt;p&gt;Once you&amp;#8217;re done with the initial setups, open Internet Explorer and go to &lt;a href=&quot;http://www.microsoft.com/en-us/download/details.aspx?id=35471&quot; target=&quot;_blank&quot;&gt;Microsoft Download Center&lt;/a&gt;, then download and install &lt;strong&gt;Windows Phone SDK 8.0&lt;/strong&gt; on your Windows 8.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Notes: if you are ever asked to press Ctrl-Alt-Delete on Windows on VMWare, and if you&amp;#39;re on MBP like I am, press &lt;strong&gt;Fn-Ctrl-Option-Delete&lt;/strong&gt; combo.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Use Visual Studio Express&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm13.png&quot; alt=&quot;&quot; title=&quot;vm13&quot; width=&quot;113&quot; height=&quot;113&quot; align=&quot;left&quot; size-full style=&quot;margin-right:1em&quot; wp-image-663&quot; /&gt; Now you should have &lt;strong&gt;Visual Studio Express 2012 for Windows Phone&lt;/strong&gt; installed, so launch it!&lt;br&gt;
&lt;br clear=&quot;all&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now go to &lt;strong&gt;FILE &amp;gt; New Project&amp;#8230;&lt;/strong&gt;&lt;br&gt;
Once you get the dialog, pick a project type. If you are reading my blog, you are very likely to be a web developer, so pick &lt;em&gt;Windows Phone HTML5 App&lt;/em&gt; may be good! (but it does not really matter for now, because the ultimate purpose here is launching an emulator!)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm14a.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm14a.png&quot; alt=&quot;&quot; title=&quot;vm14a&quot; width=&quot;650&quot;  class=&quot;aligncenter size-full wp-image-664&quot; /&gt;&lt;/a&gt;&lt;br&gt;
You get a bunch of stuff here &amp;#8211; XAML template, visual editor etc, etc. &lt;/p&gt;

&lt;h2&gt;Launch emulator from Visual Studio Express&lt;/h2&gt;

&lt;p&gt;Click the emulator button.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm15a.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm15a.png&quot; alt=&quot;&quot; title=&quot;vm15a&quot; width=&quot;650&quot; class=&quot;aligncenter size-full wp-image-665&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It should launch an WP emulator! Ta-da!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm16.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm16.png&quot; alt=&quot;&quot; title=&quot;vm16&quot; width=&quot;650&quot;  class=&quot;aligncenter size-full wp-image-666&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unfortunate things can happen. If you get this error message and fail to launch the emulator,&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm17a.png&quot; alt=&quot;&quot; title=&quot;vm17a&quot; width=&quot;374&quot; height=&quot;165&quot; class=&quot;aligncenter size-full wp-image-667&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You probably did not configure the &lt;strong&gt;.vmx&lt;/strong&gt; file correctly. Go to the top menu, &lt;strong&gt;Virtual Machine &amp;gt; Shut down&lt;/strong&gt; (not Suspend) and shut down the VM completely first then re-edit and save the .vmx file. Re launch the VM and try again.&lt;/p&gt;

&lt;h2&gt;Launch the emulator as stand-alone&lt;/h2&gt;

&lt;p&gt;OK, cool, but as a Mac-using web developer, you may not want to use Visual Studio as an IDE. But the WP8 emulator seems only running within Visual Studio. Do you need to open a dummy project all the time? &lt;/p&gt;

&lt;p&gt;No, you can hack it so the emulator can run as a stand-alone.&lt;/p&gt;

&lt;p&gt;Go to Desktop, and Ctrl-click. Then &lt;strong&gt;New &amp;gt; Shortcut&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm18.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm18.png&quot; alt=&quot;&quot; title=&quot;vm18&quot; width=&quot;650&quot; class=&quot;aligncenter size-full wp-image-668&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To create a shortcut for &lt;strong&gt;WVGA/512MB RAM&lt;/strong&gt; emulator, copy this and paste it into the field:  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;C:\Program Files (x86)\Microsoft XDE\8.0\XDE.exe&amp;quot;&lt;/span&gt; -createDiffDisk &lt;span class=&quot;s2&quot;&gt;&amp;quot;%LOCALAPPDATA%\Microsoft\XDE\dd.480x800.512.vhd&amp;quot;&lt;/span&gt; -vhd &lt;span class=&quot;s2&quot;&gt;&amp;quot;C:\Program Files (x86)\Microsoft SDKs\Windows Phone\v8.0\Emulation\Images\Flash.480x800.vhd&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(All in one line, with the double-quotes).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm19a.png&quot; alt=&quot;&quot; title=&quot;vm19a&quot; width=&quot;624&quot; height=&quot;463&quot; class=&quot;aligncenter size-full wp-image-670&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then click &lt;strong&gt;Next&lt;/strong&gt;. Name the shortcut. Then &lt;strong&gt;Finish&lt;/strong&gt;.&lt;br&gt;
Now you should have the shortcut icon on desktop.&lt;br&gt;
Double-click to launch the WP8 emulator!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/wp-content/uploads/2013/01/vm20.png&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2013/01/vm20.png&quot; alt=&quot;&quot; title=&quot;vm20&quot; width=&quot;650&quot; class=&quot;aligncenter size-full wp-image-675&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For other emulators:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WVGA&lt;/strong&gt;  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;C:\Program Files (x86)\Microsoft XDE\8.0\XDE.exe&amp;quot;&lt;/span&gt; -memsize 1024 -createDiffDisk &lt;span class=&quot;s2&quot;&gt;&amp;quot;%LOCALAPPDATA%\Microsoft\XDE\dd.480x800.1024.vhd&amp;quot;&lt;/span&gt; -vhd &lt;span class=&quot;s2&quot;&gt;&amp;quot;C:\Program Files (x86)\Microsoft SDKs\Windows Phone\v8.0\Emulation\Images\Flash.480x800.vhd&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;WXGA&lt;/strong&gt;  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;C:\Program Files (x86)\Microsoft XDE\8.0\XDE.exe&amp;quot;&lt;/span&gt; -memsize 1024 -createDiffDisk &lt;span class=&quot;s2&quot;&gt;&amp;quot;%LOCALAPPDATA%\Microsoft\XDE\dd.768x1280.1024.vhd&amp;quot;&lt;/span&gt; -vhd &lt;span class=&quot;s2&quot;&gt;&amp;quot;C:\Program Files (x86)\Microsoft SDKs\Windows Phone\v8.0\Emulation\Images\Flash.768x1280.vhd&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;720P&lt;/strong&gt;  &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;C:\Program Files (x86)\Microsoft XDE\8.0\XDE.exe&amp;quot;&lt;/span&gt; -memsize 1024 -createDiffDisk &lt;span class=&quot;s2&quot;&gt;&amp;quot;%LOCALAPPDATA%\Microsoft\XDE\dd.720x1280.1024.vhd&amp;quot;&lt;/span&gt; -vhd &lt;span class=&quot;s2&quot;&gt;&amp;quot;C:\Program Files (x86)\Microsoft SDKs\Windows Phone\v8.0\Emulation\Images\Flash.720x1280.vhd&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;References&lt;/h2&gt;

&lt;p&gt;Nokia Developer Wiki:&lt;br&gt;
&lt;a href=&quot;http://www.developer.nokia.com/Community/Wiki/Windows_Phone_8_SDK_on_a_Virtual_Machine_with_Working_Emulator&quot; target=&quot;_blank&quot;&gt;Windows Phone 8 SDK on a Virtual Machine with Working Emulator&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;NSDN Blog:&lt;br&gt;
&lt;a href=&quot;http://blogs.msdn.com/b/interoperability/archive/2012/12/21/how-to-develop-for-windows-phone-8-on-your-mac.aspx&quot; target=&quot;_blank&quot;&gt;How to develop for Windows Phone 8 on your Mac&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blogs.msdn.com/b/shintak/archive/2012/11/06/10366015.aspx&quot; target=&quot;_blank&quot;&gt;WP8 のエミュレーターを単体起動するためのショートカット&lt;/a&gt;&lt;/p&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[HTML5 Form Validation のカスタマイズ]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2012/12/01/html5-form-validation-jp/" />
	  <id>http://girliemac.com/blog/2012/12/01/html5-form-validation-jp</id>
	  <updated>2012-12-01T00:00:00-08:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;&lt;em&gt;Note: This article is written in Japanese for &lt;a href=&quot;http://www.adventar.org/calendars/27&quot; target=&quot;_blank&quot;&gt;HTML5 Advent Calendar 2012&lt;/a&gt;. If you&amp;#8217;d like to read this article in English, you can read the original post I wrote on &lt;a href=&quot;/blog/2012/11/21/html5-form-validation/&quot;&gt;November 21&lt;/a&gt;. (The article was originally written for: &lt;a href=&quot;http://www.developer.nokia.com/Blogs/Code/2012/11/21/creating-a-custom-html5-form-validation/&quot; target=&quot;_blank&quot;&gt;Nokia Code Blog&lt;/a&gt;). 
Thank you.&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;師走です。早いものですね。さて、&lt;a href=&quot;http://www.adventar.org/calendars/27&quot; target=&quot;_blank&quot;&gt;HTML5 Advent Calendar 2012&lt;/a&gt; ２日目を書かせてもらうことになりました。元々この記事は &lt;a href=&quot;http://www.developer.nokia.com/Blogs/Code/2012/11/21/creating-a-custom-html5-form-validation/&quot; target=&quot;_blank&quot;&gt;Nokia Code Blog&lt;/a&gt; の一記事として私が１１月２１日に書いたものなのですが、クロスポスト可ということなので、せっかくですので今回はその日本語版として記事にしてみました。というわけで、HTML5 Form Validation CSS3、ウェブフォント、JavaScript を使ったカスタマイズ方法について書いています。&lt;/p&gt;

&lt;p&gt;以前までならばユーザの入力フィールドの検証（バリデーション）は JavaScript もしくはサーバサイドで専用のロジックを書かねばばらなかったわけですが、HTML5 からは仕様に組み込まれるようになったために非常に簡単にできるようになりました。実装されるようになってかれこれ１年ほど経っているのですがその間に Internet Explorer など、サポートされるブラウザも増えてきました。まずこのバリデーションカスタム化についてのこの記事を読む前に、必須課目として HTML5 から新たに加わったフォームのインプット要素についての理解が必要ですので、基本を&lt;a href=&quot;http://www.html5.jp/tag/elements/input.html&quot; title=&quot;Form input 要素&quot; target=&quot;_blank&quot;&gt;ここ&lt;/a&gt;や&lt;a href=&quot;http://ascii.jp/elem/000/000/693/693899/&quot; title=&quot;HTML5でこんなに変わったinput要素を徹底解説&quot; target=&quot;_blank&quot;&gt;ここ&lt;/a&gt;などでおさらいをしておいてください。さらにバリデーションについての全般的な内容については、白石 俊平さんの書かれた、&lt;a href=&quot;http://www.atmarkit.co.jp/fwcr/design/benkyo/html5appli09/01.html&quot;　titile=&quot;HTML5で仕様になった入力値チェック＋便利な3Tips&quot; target=&quot;_blank&quot;&gt;「HTML5で仕様になった入力値チェック＋便利な3Tips」&lt;/a&gt;が非常にわかりやすいと思います。&lt;/p&gt;

&lt;h2&gt;フォームバリデーションの基本&lt;/h2&gt;

&lt;p&gt;例えば必須入力のフィールドが空の状態で送信された場合の検証。これは HTML5 では &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; に &lt;code&gt;required&lt;/code&gt; 属性を加えるだけで、下のように非常に簡単に書くことができます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Submit&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;単純な&lt;a title=&quot;JS Fiddle&quot; href=&quot;http://jsfiddle.net/girlie_mac/X6Uuc/&quot; target=&quot;_blank&quot;&gt;デモ&lt;/a&gt;を書いたので試してみてください。仕様がサポートされているブラウザ上でフィールドを空のまま送信するとエラーメッセージが表示、もしくはエラーを示す UI が現れます。&lt;br&gt;
下のスクリーンショットは、左がデスクトップ IE10 （英語版）のデフォルト、右が IE10 モバイルの UI です。  &lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;vertical-align: top&quot; src=&quot;/assets/images/articles/2012/12/screenshot-basic-ie10.png&quot; alt=&quot;Basic form validation (IE10)&quot; width=&quot;255&quot; height=&quot;125&quot; /&gt; &lt;img style=&quot;vertical-align: top;margin: 9px 0 0 20px&quot; src=&quot;/assets/images/articles/2012/12/screenshot-basic-ie10m.png&quot; alt=&quot;Basic form validation (IE10 Mobile)&quot; width=&quot;250&quot; height=&quot;68&quot; /&gt;  &lt;/p&gt;

&lt;p&gt;IE10 モバイル版では、エラーメッセージの吹き出しが表示されず、空フィールドの枠が赤く表示されただけの仕様になっているのですが、そのフィールドが focus された状態でバーチャルキーボードが現れるので、ユーザビリティは損なわれていないようです。&lt;/p&gt;

&lt;p&gt;このメッセージや吹き出しの UI は、ブラウザや環境言語によって異なります。下の画像は日本語版の Chrome から。&lt;br&gt;
&lt;img src=&quot;/assets/images/articles/2012/12/screenshot-basic-chrome-jp.png&quot; alt=&quot;Basic form validation (Chrome JP)&quot; width=&quot;301&quot; height=&quot;96&quot; /&gt;&lt;/p&gt;

&lt;p&gt;それでは、これから 1) パターンマッチング、2) CSS3 でのビジュアル効果、3) カスタムのエラーメッセージ設定、を使ってフルカスタマイズしてみましょう。&lt;/p&gt;

&lt;h2&gt;パターンマッチング&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;pattern&lt;/code&gt; 属性では要素の値を正規表現と照合することができます。下は、6~12 文字のアルファベットと数字、句読点を含む文字セットを一致させる正規表現を使った例です。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;username&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pattern=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;[a-zA-Z0-9_-]{6,12}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autofocus&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;create&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/girlie_mac/qe62z/&quot; target=&quot;_blank&quot;&gt; &lt;code&gt;pattern&lt;/code&gt; 属性のデモコード&lt;/a&gt;を試してみてください。わざと無効になるように３桁の数字などを入力てみましょう。&lt;/p&gt;

&lt;h2&gt;CSS3 ユーザインターフェイスセレクタ&lt;/h2&gt;

&lt;p&gt;CSS ではいくつかの、UI 要素状態を表す UI セレクタ（疑似クラスや疑似要素）があります。その例として、&lt;code&gt;:valid&lt;/code&gt;, &lt;code&gt;invalid&lt;/code&gt;, &lt;code&gt;in-range&lt;/code&gt;, &lt;code&gt;out-of-range&lt;/code&gt;, &lt;code&gt;required&lt;/code&gt;, &lt;code&gt;optional&lt;/code&gt;, &lt;code&gt;read-only&lt;/code&gt;, &lt;code&gt;read-write&lt;/code&gt; が挙げられます。&lt;br&gt;
これを使って、入力の有効/無効状態を赤と緑の色別に表示するようにしてみましょう。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nd&quot;&gt;:valid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;nd&quot;&gt;:invalid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;入力値が正しい形式に一致する時は緑、値が無効なときは入力値が赤で表示されます。&lt;a href=&quot;http://jsfiddle.net/girlie_mac/Db7kg/&quot; target=&quot;_blank&quot;&gt;サンプル&lt;/a&gt;で試してみましょう。&lt;/p&gt;

&lt;h2&gt;ウェブフォントアイコンを使う&lt;/h2&gt;

&lt;p&gt;この上さらに、チェックマークのついたアイコンを表示させてみましょう。せっかくですので画像アイコンを使わず CSS3 をフル活用してウェブフォントを使った応用をやってみましょう。&lt;br&gt;
&lt;img src=&quot;/assets/images/articles/2012/12/screenshot-valid-fonticon.png&quot; alt=&quot;using webfont icon&quot; width=&quot;269&quot; height=&quot;73&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ここでまた必須課目です！ここではちょっと変わった活用をしてみたいので、CSS3 ウェブフォントについてよくわからないという方は必ず先におさらいしておいてください。&lt;/p&gt;

&lt;p&gt;さて、フリーのウェブフォントはいろいろあるのですが、ここでは &lt;a href=&quot;http://icomoon.io/&quot; target=&quot;_blank&quot;&gt;IcoMoon&lt;/a&gt; が配布している &lt;em&gt;Iconic&lt;/em&gt; という絵フォントを使います。このサイトの、&lt;a href=&quot;http://icomoon.io/app/&quot; target=&quot;_blank&quot;&gt;IcoMoon App&lt;/a&gt; を使うとなんと自分の必要なものだけを選べ、それを軽量パッケージ化してくれるのです。&lt;/p&gt;

&lt;p&gt;一旦フォントセットを作ったら、それを読み込む &lt;code&gt;@font-face&lt;/code&gt; 規則を使って CSS を作成します。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@font-face&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;iconic&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;webfonts/iconic.eot&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;webfonts/iconic.eot?#iefix&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;embedded-opentype&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;webfonts/iconic.svg#iconic&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;webfonts/iconic.woff&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;woff&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;webfonts/iconic.ttf&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;truetype&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;疑似クラス &lt;code&gt;:valid&lt;/code&gt; と、疑似要素 &lt;code&gt;::after&lt;/code&gt; (もしくは &lt;code&gt;::before&lt;/code&gt;)を一緒に使うと入力値が無効であった時にエレメントの後ろ（または前に）コンテントを表示するとこができます。では後ろにフォントアイコンを表示させてみましょう。 &lt;/p&gt;

&lt;p&gt;&lt;code&gt;input&lt;/code&gt; 要素の後にアイコンを表示するのだから、&lt;code&gt;input&lt;/code&gt; 要素と疑似クラスと疑似要素を全部一気につなげて &lt;code&gt;input:valid::after&lt;/code&gt; としたいところですが、ちょっと待って！この &lt;code&gt;input&lt;/code&gt; 要素 DOM にはドキュメントツリーコンテントがないので疑似要素をくっつけることができないのです。なのでここでは適当な要素、 &lt;code&gt;span&lt;/code&gt; を使うことにします。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;username&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pattern=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;[a-zA-Z0-9_-]{6,12}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autofocus&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;icon-validation&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-icon=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;amp;#xe000&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;data-*&lt;/code&gt; 属性を使って絵フォント値を指定してみましょう。ここでは &lt;code&gt;span&lt;/code&gt; 中に &lt;code&gt;data-icon&lt;/code&gt; というカスタム属性を作成して IcoMoon で作成した特定のフォントのキャラクター値を指定しています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nd&quot;&gt;:valid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.icon-validation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:before&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;簡単な CSS ではありますがこの数行にはいろいろな意味を含んでいます。まず、&lt;code&gt;+&lt;/code&gt; は Adjacent Sibling （隣接）セレクタ、直後に後続する要素のみ指定しています。そして疑似要素のコンテントは定義されたカスタムデータ属性を使っています。この HTML5 カスタムデータ属性 (&lt;code&gt;data-*&lt;/code&gt;) は、DOM ステートを保ったまま少量のプライベートデータを保存できるのです。確かに絵フォントキャラクターを &lt;code&gt;::before&lt;/code&gt; 疑似要素の、&lt;code&gt;content&lt;/code&gt; プロパティで直接使うことはできるのですが、ルー大柴みたいに言ってみれば、この &lt;code&gt;data-*&lt;/code&gt; を使ってデータバインディグする方法がセマンティックでベターだと思うぜ☆&lt;/p&gt;

&lt;h2&gt;カスタムエラーの設定&lt;/h2&gt;

&lt;p&gt;エラーメッセージの表示をカスタマイズするには大まかに２つの方法があります。&lt;/p&gt;

&lt;p&gt;では簡単な方法から。これは &lt;code&gt;title&lt;/code&gt; 属性を使ったインラインテキストを表示させる方法で、ここで指定されたテキストはデフォルトのエラーメッセージに下に表示されます。したの画像は Opera 12 です。&lt;br&gt;
&lt;img class=&quot;alignnone size-full wp-image-329&quot; src=&quot;/assets/images/articles/2012/12/screenshot-custom-opera12.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;150&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;username&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pattern=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;[a-zA-Z0-9_-]{6,12}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autofocus&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt; 
       &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;must be alphanumeric in 6-12 chars&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/girlie_mac/vuP4n/&quot;&gt;このデモ&lt;/a&gt;で自分で試してみてください。&lt;/p&gt;

&lt;p&gt;フルカスタム仕様には、ちょっとだけ DOM スクリプティング（ってか JavaScript)を使います。 メッセージを含む DOM ノードの &lt;code&gt;validationMessage&lt;/code&gt; プロパティ値を変更することによって &lt;code&gt;setCustomValidity&lt;/code&gt; メソッドでカスタムメッセージを指定することができます。&lt;/p&gt;

&lt;p&gt;フォーム要素ノード上で &lt;code&gt;checkValidity&lt;/code&gt; メソッドが入力フィールドを検証した際にその値が無効であった場合、そのノードで &lt;code&gt;invalid&lt;/code&gt; イベントが発生されます。なので、ここでイベントリスナを登録してそこで入力フィールドが空もしくはミスマッチかを調べてやればよいのです。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;invalid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valueMissing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCustomValidity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;PLZ CREATE A USERNAME, YO!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCustomValidity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;U R DOIN IT WRONG!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下の画像が Firefox 16 での結果です。&lt;br&gt;
&lt;img src=&quot;/assets/images/articles/2012/12/screenshot-custom-ff16.png&quot; alt=&quot;&quot; width=&quot;250&quot; height=&quot;121&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;validity&lt;/code&gt; プロパティは、 &lt;code&gt;value&lt;/code&gt;、 &lt;code&gt;valueMissing&lt;/code&gt;、 &lt;code&gt;typeMismatch&lt;/code&gt; など、要素のバリデーション状態を boolean で示すプロパティを含む &lt;code&gt;ValidityState&lt;/code&gt; オブジェクトを返します。（&lt;code&gt;ValidityState&lt;/code&gt; についてもっと詳しく学びたい方のためにブログの最後にリンクを貼っておきます。）&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/girlie_mac/te3Qd/&quot; target=&quot;_blank&quot;&gt;このデモ&lt;/a&gt;で実際にどう動くか見てみてください。コードを fork して是非自分でもほかの &lt;code&gt;ValidityState&lt;/code&gt; オブジェクト状態がどういったふうに動くのか確かめてみてください。&lt;br&gt;
JavaScript と &lt;code&gt;title&lt;/code&gt; 属性を両方使うことも可能です。これも自分で試してみてください。&lt;/p&gt;

&lt;h2&gt;Put Them All Together&lt;/h2&gt;

&lt;p&gt;さてここで&lt;a href=&quot;https://dl.dropbox.com/u/1330446/validation.html&quot; target=&quot;_blank&quot;&gt;フルまとめデモ&lt;/a&gt;を見てみましょう。Windows Phone 8 メトロ UI をちょっとまねたスタイルにしてみました。なのでモバイルからもぜひためしてみてね。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dl.dropbox.com/u/1330446/validation.html&quot;&gt;&lt;img src=&quot;/assets/images/articles/2012/12/form-val-demo-qr.png&quot; alt=&quot;Demo URL QR&quot; width=&quot;128&quot; height=&quot;127&quot; align=&quot;right&quot; /&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;http://goo.gl/xKj0X&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;実は私が試してみたところ IE 10 にはちょっとした gotcha があるのです。まあ、IE なので落とし穴があって当たり前か、とも思うのですが。このデモの場合、どうもフィールドが unfocus するまでチェックマークアイコンが表示されないようなのです。テストした他のブラウザでは入力値が有効になり次第（このデモの場合、文字数が６文字になり次第）アイコンがちゃんと表示されます。&lt;/p&gt;

&lt;p&gt;で、下の画像は Windows Phone 8 上の IE10 Mobile の実際のスクリーンショットです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2012/12/screenshot-ie10m.png&quot; alt=&quot;screenshot of IE10 mobile&quot; width=&quot;600&quot; height=&quot;410&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ちょっと端折った箇所もあるのでわかりにくい所もあったかもしれませんが、これからのフォーム UX の参考になっていただけえたらうれしいです。あ、あと最後に。フォールバックについて書きませんでしたが、バリデーションがすべてのブラウザに実装されているわけではないので実際は送信されたデータはサーバサイドでもしっかり管理することが大切です。当然といえば当然なのですが念のため。&lt;/p&gt;

&lt;p&gt;ではよいお年を（ってちょっとまだ早いか）。&lt;/p&gt;

&lt;h2&gt;Learn More&lt;/h2&gt;

&lt;p&gt;日本語&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  MSDN: &lt;a href=&quot;http://msdn.microsoft.com/ja-jp/library/ie/hh673544(v=vs.85).aspx&quot; target=&quot;_blank&quot;&gt;フォーム (Windows)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  Adobe: &lt;a href=&quot;http://www.adobe.com/jp/devnet/dreamweaver/articles/html5pack_css3_part4.html&quot; target=&quot;_blank&quot;&gt;HTML5&amp;#038;CSS3入門 第4回 @font-face（ウェブフォント）の利用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;英語&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  WebPlatform.org: &lt;a href=&quot;http://docs.webplatform.org/wiki/guides/html5_form_features&quot; target=&quot;_blank&quot;&gt;HTML5 form features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  Dive Into HTML5: &lt;a href=&quot;http://diveintohtml5.info/forms.html&quot; target=&quot;_blank&quot;&gt;A Form of Madness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  W3C: &lt;a href=&quot;http://www.w3.org/TR/css3-fonts/&quot; target=&quot;_blank&quot;&gt;CSS Fonts Module Level 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  Six Revisions: &lt;a href=&quot;http://sixrevisions.com/css/font-face-guide/&quot; target=&quot;_blank&quot;&gt;The Essential Guide to @font-face&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  WebPlatform.org: &lt;a href=&quot;http://docs.webplatform.org/wiki/css/selectors/pseudo-elements&quot; target=&quot;_blank&quot;&gt;Pseudo-elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  MSDN: &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/apps/hh466212.aspx&quot; target=&quot;_blank&quot;&gt;ValidityState object&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[Creating A Custom HTML5 Form Validation]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2012/11/21/html5-form-validation/" />
	  <id>http://girliemac.com/blog/2012/11/21/html5-form-validation</id>
	  <updated>2012-11-21T00:00:00-08:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;&lt;em&gt;Note: The article was originally written for &lt;a href=&quot;http://www.developer.nokia.com/Blogs/Code/2012/11/21/creating-a-custom-html5-form-validation/&quot;&gt;Nokia Code Blog&lt;/a&gt;, with helps from Fred Patton (editor) and Andrea Trasatti (proofreading).&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;In his blog post on &lt;a href=&quot;http://www.developer.nokia.com/Blogs/Code/2012/11/09/html5-forms-and-ie10-mobile/&quot;&gt;HTML5 forms and IE10 Mobile&lt;/a&gt;, Andrea explained HTML5 forms and what is new in Internet Exporer 10 Mobile, so you should now have some understanding of HTML5 form validation. To summarize, HTML5 eases the pain of writing extra logic to validate users’ form inputs, letting you create usable forms with a little or no scripting.&lt;/p&gt;

&lt;p&gt;In this tutorial, I will show you a practical example of creating a custom validated form  with CSS3, web fonts, and a bit of JavaScript (or not).&lt;/p&gt;

&lt;p&gt;First of all, creating a form field with a simple empty field validation is extremely easy. All you need to do is including required attribute in &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Submit&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/girlie_mac/X6Uuc/&quot;&gt;Try this simplest form validation demo&lt;/a&gt;. When you attempt to submit the form with the required field empty, the supported browsers display an error indication (with message, or just a visual indication).&lt;/p&gt;

&lt;p&gt;These are the screenshots of default error UI from IE10 (desktop) and IE10 Mobile:  &lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;vertical-align: top&quot; src=&quot;/assets/images/articles/2012/12/screenshot-basic-ie10.png&quot; alt=&quot;Basic form validation (IE10)&quot; width=&quot;255&quot; height=&quot;125&quot; /&gt; &lt;img style=&quot;vertical-align: top;margin: 9px 0 0 20px&quot; src=&quot;/assets/images/articles/2012/12/screenshot-basic-ie10m.png&quot; alt=&quot;Basic form validation (IE10 Mobile)&quot; width=&quot;250&quot; height=&quot;68&quot; /&gt;  &lt;/p&gt;

&lt;p&gt;In IE10 Mobile, you do not get the &amp;quot;speech bubble&amp;quot; error message, but the field is focused with red borders while the visual keyboard is popped up, so you know the field needs  attention.&lt;/p&gt;

&lt;p&gt;The error message text and its UI vary depending on browsers and language settings. The screenshot below is Chrome running on the MacOS with Japanese as the primary language:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2012/12/screenshot-basic-chrome-jp.png&quot; alt=&quot;Basic form validation (Chrome JP)&quot; width=&quot;301&quot; height=&quot;96&quot; /&gt;&lt;/p&gt;

&lt;p&gt;OK, this looks good enough, but let’s make it more interesting by customizing it using 1) pattern matching, 2) CSS3 visual effects, and 3) custom error messages.&lt;/p&gt;

&lt;h2&gt;Pattern Matching&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;pattern&lt;/code&gt; attribute specifies a regular expression against the control’s value. Here’s a simple regular expression to detect text that is 6 to 12 alphanumeric characters long.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;username&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pattern=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;[a-zA-Z0-9_-]{6,12}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autofocus&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;create&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/girlie_mac/qe62z/&quot;&gt;Try this demo with the pattern attribute&lt;/a&gt; by submitting an invalid query. For example, type “123″ and hit “Create” button and see what happens.&lt;/p&gt;

&lt;h2&gt;CSS3 User Interface Selectors&lt;/h2&gt;

&lt;p&gt;There are a number of &lt;em&gt;user interface state pseudo-classes&lt;/em&gt; in CSS. In additional to &lt;code&gt;:hover&lt;/code&gt;, &lt;code&gt;:active&lt;/code&gt;, etc., there are more pseudo-classes defined, such as &lt;code&gt;:valid&lt;/code&gt;, &lt;code&gt;invalid&lt;/code&gt;, &lt;code&gt;in-range&lt;/code&gt;, &lt;code&gt;out-of-range&lt;/code&gt;, &lt;code&gt;required&lt;/code&gt;, optional, &lt;code&gt;read-only&lt;/code&gt; and &lt;code&gt;read-write&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let’s color the field input depending on the state. The text will appear red when the entry is invalid, and green when it is valid.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nd&quot;&gt;:valid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;nd&quot;&gt;:invalid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/girlie_mac/Db7kg/&quot;&gt;Try this demo&lt;/a&gt; to see how the CSS takes effect.&lt;/p&gt;

&lt;h2&gt;More Visual Effects with Web Font Icon&lt;/h2&gt;

&lt;p&gt;Now, we are going to display an extra visual indication with a green checkmark icon. Instead of using an image, let’s experiment with CSS3 web font capabilities.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2012/12/screenshot-valid-fonticon.png&quot; alt=&quot;using webfont icon&quot; width=&quot;269&quot; height=&quot;73&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Before proceeding, if you are not familiar with CSS3 web fonts, please read the articles linked at the end of this blog.&lt;/p&gt;

&lt;p&gt;There are many free web fonts out there, as well as some icon fonts you can use for free. In this demo, I used the Iconic font from &lt;a href=&quot;http://icomoon.io/&quot;&gt;IcoMoon&lt;/a&gt;. The great thing about using IcoMoon is that the &lt;a href=&quot;http://icomoon.io/app/&quot;&gt;IcoMoon App&lt;/a&gt; lets you can choose only the icons you need to use, and package them into a lightweight file.&lt;/p&gt;

&lt;p&gt;Once you get the web fonts, upload all the font formats in a one place somewhere on your server with your HTML files, and include the @font-face rule in your CSS file.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@font-face&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;iconic&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;webfonts/iconic.eot&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;webfonts/iconic.eot?#iefix&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;embedded-opentype&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;webfonts/iconic.svg#iconic&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;svg&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;webfonts/iconic.woff&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;woff&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;webfonts/iconic.ttf&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;truetype&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, using a CSS trick, add the icon when the entry is in the &lt;code&gt;:valid&lt;/code&gt; state, with using the &lt;code&gt;::before&lt;/code&gt; (or &lt;code&gt;::after&lt;/code&gt;) pseudo-element to insert some content before (or after) the content of an element.&lt;/p&gt;

&lt;p&gt;To display the icon after the input field, I am tempted to just use pseudo-class and pseudo-element all together like, &lt;code&gt;input:valid::after&lt;/code&gt;, However, it is not possible to add contents to the input with the CSS, since input has no document tree content. Therefore, I needed to use an extra element after the input like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;username&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pattern=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;[a-zA-Z0-9_-]{6,12}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autofocus&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;icon-validation&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-icon=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;amp;#xe000&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the &lt;code&gt;span&lt;/code&gt;, I am using a &lt;code&gt;data-&lt;/code&gt; attribute to specify which character to insert. In this case, I am using &lt;code&gt;data-icon&lt;/code&gt; attribute to hold the special font character that I used IcoMoon to map.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nd&quot;&gt;:valid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.icon-validation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:before&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The custom data attributes (&lt;code&gt;data-*&lt;/code&gt;) in HTML5 is used to store a small private data and retained minimal state on DOM.
You can insert the character directly into the content property of the &lt;code&gt;::before&lt;/code&gt; pseudo-element in the CSS instead, however, I recommend using the data binding technique with the &lt;code&gt;data-*&lt;/code&gt; to make your code more semantic.&lt;/p&gt;

&lt;h2&gt;Customizing the Error Text&lt;/h2&gt;

&lt;p&gt;There’s the easy way to customize the message text, and then there’s the easier way.&lt;/p&gt;

&lt;p&gt;The easier way is adding inline text with title attribute. The text will be appended after the default error message. The screenshot below is from Opera 12:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-329&quot; src=&quot;/assets/images/articles/2012/12/screenshot-custom-opera12.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;150&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;username&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pattern=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;[a-zA-Z0-9_-]{6,12}&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;autofocus&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt; 
       &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;must be alphanumeric in 6-12 chars&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/girlie_mac/vuP4n/&quot;&gt;Try this demo&lt;/a&gt; to see how this takes in effect.&lt;/p&gt;

&lt;p&gt;If you would like to fully customize the error message, you need a little DOM scripting help.
The setCustomValidity method allows you to set a custom text by changeing the validationMessage property of the DOM node that contains the message.&lt;/p&gt;

&lt;p&gt;When the input is checked by checkValidity method on a form element node, and found to be invalid, the invalid event is fired for the node. So you can add the event listener to check if the input is either empty or the value is mismatched.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;invalid&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valueMissing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCustomValidity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;PLZ CREATE A USERNAME, YO!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;valid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCustomValidity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;U R DOIN IT WRONG!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is how it looks in Firefox 16.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2012/12/screenshot-custom-ff16.png&quot; alt=&quot;&quot; width=&quot;250&quot; height=&quot;121&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;validity&lt;/code&gt; property returns a &lt;code&gt;ValidityState&lt;/code&gt; object, which contains properties that describe the state (boolean) of validation on an element, such as, value, &lt;code&gt;valueMissing&lt;/code&gt;, &lt;code&gt;typeMismatch&lt;/code&gt;, etc. (If you would like to learn more about &lt;code&gt;ValidityStat&lt;/code&gt;e object, I list some links at the end of this article).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/girlie_mac/te3Qd/&quot;&gt;Try this demo&lt;/a&gt; to see how it takes effect. I also encourage you to fork the code to play with other &lt;code&gt;ValidityState&lt;/code&gt; object states.&lt;/p&gt;

&lt;p&gt;You can use both the JavaScript and &lt;code&gt;title&lt;/code&gt; attribute together. Try it by yourself.&lt;/p&gt;

&lt;h2&gt;Put Them All Together&lt;/h2&gt;

&lt;p&gt;I have put together &lt;a href=&quot;https://dl.dropbox.com/u/1330446/validation.html&quot;&gt;a full demo&lt;/a&gt; with extra styles to mimic the Windows Phone 8 UI, so try it on mobile too!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dl.dropbox.com/u/1330446/validation.html&quot;&gt;&lt;img src=&quot;/assets/images/articles/2012/12/form-val-demo-qr.png&quot; alt=&quot;Demo URL QR&quot; width=&quot;128&quot; height=&quot;127&quot; align=&quot;right&quot; /&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;http://goo.gl/xKj0X&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These is a little gotcha in IE10 mobile with the icon next to the field—it does not display until the field it unfocused, while on other browsers I have tested, it shows up immediately once the query becomes valid (in this case, when the numbers of the character hits 6).&lt;/p&gt;

&lt;p&gt;These are actual screenshots from IE Mobile:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/articles/2012/12/screenshot-ie10m.png&quot; alt=&quot;screenshot of IE10 mobile&quot; width=&quot;600&quot; height=&quot;410&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;Learn More&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  WebPlatform.org: &lt;a href=&quot;http://docs.webplatform.org/wiki/guides/html5_form_features&quot; target=&quot;_blank&quot;&gt;HTML5 form features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  Dive Into HTML5: &lt;a href=&quot;http://diveintohtml5.info/forms.html&quot; target=&quot;_blank&quot;&gt;A Form of Madness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  W3C: &lt;a href=&quot;http://www.w3.org/TR/css3-fonts/&quot; target=&quot;_blank&quot;&gt;CSS Fonts Module Level 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  Six Revisions: &lt;a href=&quot;http://sixrevisions.com/css/font-face-guide/&quot; target=&quot;_blank&quot;&gt;The Essential Guide to @font-face&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  WebPlatform.org: &lt;a href=&quot;http://docs.webplatform.org/wiki/css/selectors/pseudo-elements&quot; target=&quot;_blank&quot;&gt;Pseudo-elements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  MSDN: &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/apps/hh466212.aspx&quot; target=&quot;_blank&quot;&gt;ValidityState object&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[HTML5 Dev Conf Slides]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2012/11/09/html5-dev-conf-slides/" />
	  <id>http://girliemac.com/blog/2012/11/09/html5-dev-conf-slides</id>
	  <updated>2012-11-09T00:00:00-08:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2012/11/Screen-Shot-2012-11-09-at-3.41.22-PM.png&quot; alt=&quot;&quot; title=&quot;HTML5DevConf SF Slides&quot; width=&quot;558&quot; height=&quot;397&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I forgot to post the slides from my talk at &lt;a href=&quot;http://html5devconf.com/&quot; target=&quot;_blank&quot;&gt;HTML5 Dev Conf&lt;/a&gt; in San Francisco on October 15 and 16. &lt;/p&gt;

&lt;p&gt;There were so many great speakers and varieties of topics all day long for two days, and I truly enjoyed being there as an audience and as a speaker.&lt;br&gt;
And I would like to say thank you so much for all of you who attended at my talk. I was surprised to see the room was completely full -actually it was overflowed so some had to sit on floor, and some turned away by staff.&lt;/p&gt;

&lt;p&gt;Anyway, my talk was about strategies on mobile with HTML5 – pretty much same as the last talk at Innovators of The Web Conf, but with more updated info and demos.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://girliemac.github.com/presentation-slides/SFHTML5DevConf/&quot; target=&quot;_blank&quot;&gt;The slides for my preso is available on github&lt;/a&gt;. Use arrow keys or spacebar to navigate the slides. (This is created on Google&amp;#8217;s HTML slide template, and it is best viewed on Webkit-based browsers.)&lt;/p&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[HTML5 File API &#038; XHR2 with Node.js Express]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2012/11/04/html5-file-api-xhr2-with-node-js-express/" />
	  <id>http://girliemac.com/blog/2012/11/04/html5-file-api-xhr2-with-node-js-express</id>
	  <updated>2012-11-04T00:00:00-07:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;&lt;em&gt;Note: This article is written in Japanese for &lt;a href=&quot;http://atnd.org/events/33022&quot; target=&quot;_blank&quot;&gt;東京Node学園祭2012&lt;/a&gt;. I may or may not re-post this in English later only when I feel like to.&lt;br&gt;
KTHXBAI&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2012/11/Screen-Shot-2012-11-04-at-12.33.35-AM.png&quot; alt=&quot;file upload demo screenshot&quot; title=&quot;screenshot&quot;&gt;&lt;/p&gt;

&lt;p&gt;こんにちは、そして（たぶん）はじめまして。GirlieMac! Blog 初の日本語の記事を「東京Node学園祭」のために書かせてもらう事になりました。私はサンフランシスコ在住なので残念ながら学園祭参加はできないのですが、ブログの参加で遠く離れたこの地で応援されていただきます。&lt;/p&gt;

&lt;p&gt;先に説明しておきますが、私はフロントエンド、しかもモバイルの UX ディベロッパーなので Node.js の記事というとちょっと畑違いかもしれませんが、フロントエンド目線で HTML5 File API と XHR2 そして Node を一緒に使ってみた画像ファイルアップロードのチュートリアルを書いてみます。&lt;/p&gt;

&lt;p&gt;ここで使われた HTML5 フィーチュアはまだブラウザによってはサポートされていません。したがってコンパティビリティについては &lt;a href=&quot;http://caniuse.com/fileapi&quot; target=&quot;_blank&quot;&gt;Can I use File API?&lt;/a&gt; と、&lt;a href=&quot;http://caniuse.com/xhr2&quot; target=&quot;_blank&quot;&gt;Can I use XHR2?&lt;/a&gt; でチェックしてみてください。&lt;/p&gt;

&lt;p&gt;それでは、HTML5 File API を使って画像のローカルファイルを読み込んでみましょう。&lt;/p&gt;

&lt;p&gt;まず、HTML マークアップ側で、フォームを作成します。&lt;br&gt;
&lt;code&gt;&amp;lt;input type=&amp;quot;file&amp;quot;&amp;gt;&lt;/code&gt; エレメントを使います。ここでは、&lt;code&gt;accept&lt;/code&gt; 属性を &lt;code&gt;image/*&lt;/code&gt; と指定して画像ファイルのみを扱ってみましょう。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;uploadForm&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;enctype=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;multipart/form-data&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;method=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/upload&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;file&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;accept=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;image/*&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;imagefile&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;imagefile&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;button&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Upload&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;upoadButton&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;preview&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;JavaScript 側です。ユーザが画像を選択した際に &lt;code&gt;File&lt;/code&gt; オブジェクトのリストを返します。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;imagefile&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;change&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;fileSelected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;FileReader&lt;/code&gt; オブジェクトをインスタンスとして読み取ります。&lt;br&gt;
さてここで、&lt;code&gt;readAsDataURL()&lt;/code&gt; を呼び、 &lt;code&gt;DataURL&lt;/code&gt; を使ってアップロード前に画像プレビューを表示してみましょう。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fileSelected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;localFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;imagefile&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;imgFmt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/^(image\/bmp|image\/gif|image\/jpeg|image\/png|image\/tiff)$/i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imgFmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;localFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 画像ファイルではありません、というエラーメッセージなど&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preview&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;preview&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 画像ファイルを data URL として読み取ります&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FileReader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readAsDataURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;localFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;reader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;　　&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// e.target.result は DataURL を含みます&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;preview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;XMLHttpRequest オブジェクトを作ります。次のイベント（progress, load, error, abort）のイベントリスナーを登録し、XMLHttpRequest Level 2 でサポートされ始めた FormData を使ってデータを send() メソッドで POST します。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;upoadButton&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;startUpload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;   
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;startUpload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;formData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FormData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;uploadForm&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XMLHttpRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 

  &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;upload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;progress&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uploadProgress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;load&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uploadFinish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
  &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uploadError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;abort&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uploadAbort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/upload&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;formData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uploadProgress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;さて、ここでやっと、Node.js の登場です。 Express を使ってファイルを指定先にアップロードしましょう。&lt;br&gt;
アップロードされたファイルの情報は req.files に含まれています。例えばファイルサイズ (byte) の情報は size プロパティ、ファイル名は name プロパティ、といった感じです。&lt;/p&gt;

&lt;p&gt;app.js Server-side:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* Server configuration */&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;methodOverride&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bodyParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keepExtensions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt; 
  &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/public&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/upload&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 仮のファイル置き場&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tmp_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imagefile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 実際のファイル置き場&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;./public/user/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imagefile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ファイルを仮の場所から移します&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tmp_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 仮ファイルを削除します&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;unlink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tmp_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;File uploaded to: &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;target_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; - &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;imagefile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39; bytes&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;と、こんな感じです。かなりはしょりましたが大まかな流れがわかっていただけたでしょうか。&lt;/p&gt;

&lt;p&gt;久々の日本語のブログでちょっと手こずってしまいましたが、楽しんでいただけたら幸いです。コードや説明に間違いを見つけたり感想があった場合は遠慮なくコメントください。コメントはスパム防止のために承認制にしてあるのですが時差もあるのでちょっと遅れるかもしれません。 &lt;/p&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  W3C: &lt;a href=&quot;http://www.w3.org/TR/FileAPI/&quot; target=&quot;_blank&quot;&gt;File API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  W3C: &lt;a href=&quot;http://www.w3.org/TR/XMLHttpRequest/#interface-formdata&quot; target=&quot;_blank&quot;&gt;XMLHttpRequest Level 2 &amp;#8211; FormData インターフェイス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  Node.js: &lt;a href=&quot;http://expressjs.com/&quot; target=&quot;_blank&quot;&gt;Express&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  Article: &lt;a href=&quot;http://www.hacksparrow.com/handle-file-uploads-in-express-node-js.html&quot; target=&quot;_blank&quot;&gt;Handle File Uploads in Express&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[Because I Want Mobile Web to Be A Better Platform]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2012/10/13/because-i-want-mobile-web-to-be-a-better-platform/" />
	  <id>http://girliemac.com/blog/2012/10/13/because-i-want-mobile-web-to-be-a-better-platform</id>
	  <updated>2012-10-13T00:00:00-07:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;It has been 4.5 months since I came back to Nokia (If you don&amp;#8217;t know, I used to be working for the ill-fated Nokia N-Gage in 2005-2007. The SF office is now occupied by Zynga).&lt;/p&gt;

&lt;p&gt;More that a few people has asked me what my &amp;#8220;secret project&amp;#8221; at Nokia is, especially because I was hired while the company was facing downsizing, also the fact that I was working for webOS (the mobile platform that nobody in the world cared but Steve Jobs. -OK, I&amp;#8217;ve been sarcastic because it has been bitter-sweet. But it was true Steve kept his eyes on what we were doing), some made this speculation about Nokia jumping on the web-based OS bandwagon after Mozilla and Tizen. However, this is not a reason, or what I do at Nokia. My project is nothing secret about.&lt;/p&gt;

&lt;p&gt;So what I do? I work for the web standard and evangelizing open web platform, also work with W3C&amp;#8217;s community groups. Of course, I am working with IE10 on Windows Phone 8 and evangelising it too! (Yes, Lumia 920 is an awesome phone!)&lt;/p&gt;

&lt;p&gt;One of the W3C works I currently involve most is &lt;a href=&quot;http://www.w3.org/community/coremob/&quot; target=&quot;_blank&quot;&gt;Core Mobile Web Platform CG&lt;/a&gt;, where we specifies the core set of technologies that define the baseline platform for mobile Web apps, and create related conformance test suites, use cases, scenarios, etc. to help mobile web developers out there.&lt;br&gt;
&lt;a href=&quot;http://coremob.github.com/coremob-2012/&quot; target=&quot;_blank&quot;&gt;Core Mobile Web Platform — 2012 Draft&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CoreMob includes major mobile players, not limited to manufacturers (Nokia, Samsung, etc), carriers (Verizon, AT&amp;#038;T, France Telecom, etc) and browser vendors (Opera, Mozilla, Microsoft and Google), we have reps from anybody who are interested. In fact, one of the biggest players in the community group is Facebook, which you may recognize as the company whose CEO doesn&amp;#8217;t believe in HTML5. Well, then you are wrong. &lt;a href=&quot;http://developers.facebook.com/html5/blog/&quot; target=&quot;_blank&quot;&gt;Facebook cares mobile HTML5&lt;/a&gt;. A lot.&lt;/p&gt;

&lt;p&gt;Actually, I just came back from the 2nd CoreMob F2F meeting in London last week. We had a lot of discussions for the world domination, I mean, for defining the mobile web standards. So now you can benefit from one the results of what came out from &lt;img src='http://girliemac.com/blog/wp-includes/images/smilies/icon_smile.gif' alt=':-)' class='wp-smiley' /&gt;&lt;br&gt;
&lt;a href=&quot;http://coremob.github.com/coremob-ucr/index.html&quot; target=&quot;_blank&quot;&gt;Coremob Use Cases and Requirements&lt;/a&gt;&lt;br&gt;
And currently, I am working on a demo app to showcase the use cases for mobile, for developers, as well as vendors to encourage implementing features correctly. I will open-source the project, so stay tuned!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2012/10/webplatform-stickers.jpg&quot; alt=&quot;WebPlatform.org&quot; title=&quot;WebPlatform.org&quot; width=&quot;306&quot; align=&quot;right&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are more going on with Nokia and W3C &amp;#8211; you probably have heard that &lt;a href=&quot;http://www.webplatform.org/&quot; target=&quot;_blank&quot;&gt;WebPlatform.org&lt;/a&gt; Alpha has just launched! This is a community-driven site for developers to learn and participate. Other stewards are Adobe, Facebook, Google, HP, Microsoft, Mozilla, Opera, and believe or not, Apple too, despite lacking the shiny logo from the site. (and it is intentional so please don&amp;#8217;t report the bug to us).&lt;/p&gt;

&lt;p&gt;I am hoping the movements make the mobile HTML5 a better platform, more standardized and away from proprietaries and patents that prevent the standardizing process. (OK, I do agree that intellectual properties should be protected in some degrees, but disagree when it prevents innovations from happening!)&lt;/p&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[Resolution in Media Queries]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2012/08/03/resolution-in-media-queries/" />
	  <id>http://girliemac.com/blog/2012/08/03/resolution-in-media-queries</id>
	  <updated>2012-08-03T00:00:00-07:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2012/08/mq-resolution.png&quot; alt=&quot;my preso slide&quot; title=&quot;mq-resolution&quot; width=&quot;560&quot; height=&quot;438&quot; class=&quot;size-full wp-image-523&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I realized I hardly blog about mobile web development, although I do tweet about mobile quite often! (If you have not follow me on twitter, &lt;a href=&quot;http;//twitter.com/girlie_mac&quot;&gt;follow @girlie_mac &lt;/a&gt; now.)&lt;/p&gt;

&lt;p&gt;So I decided to post a few short topics from my last &lt;a href=&quot;http://girliemac.github.com/presentation-slides/cascade/#1&quot; title=&quot;presentation&quot; target=&quot;_blank&quot;&gt;presentation&lt;/a&gt;, and my first topic off the preso is about &lt;a href=&quot;http://www.w3.org/TR/css3-mediaqueries/#resolution&quot; target=&quot;_blank&quot;&gt;CSS resolution&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;CSS Resolution&lt;/h2&gt;

&lt;p&gt;This is such obscure CSS 2 feature that not many people know or have used.&lt;br&gt;
The &lt;strong&gt;&lt;em&gt;resolution&lt;/em&gt;&lt;/strong&gt; media feature describes the resolution of the output device, and its unit can be- &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;strong&gt;dpi&lt;/strong&gt; (dots per inch)&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;dpcm&lt;/strong&gt; (dots per centimeter), and &lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;dppx&lt;/strong&gt; (dots per pixel, &lt;a href=&quot;http://www.w3.org/TR/css3-values/#resolution&quot; target=&quot;_blank&quot;&gt;proposed for CSS3&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Why it matters?&lt;/h2&gt;

&lt;p&gt;So why has this become relavent to mobile web development now?&lt;/p&gt;

&lt;p&gt;Because mobile display has been up-res&amp;#8217;ing since Apple has announced the &lt;a href=&quot;http://www.apple.com/iphone/features/retina-display.html&quot; target=&quot;_bank&quot;&gt;Retina display&lt;/a&gt;. To be honest with you, I am not sure if other manufacturers like Samsung had high pixel density displays before Apple, however, the hi-res trend has started ever since.&lt;/p&gt;

&lt;p&gt;Retina display has the twice as much pixel density, and its device pixel ratio is 2 (DOM &lt;code&gt;window.devicePixelRatio == 2&lt;/code&gt;), and for example, Nexus One has 1.5.&lt;/p&gt;

&lt;p&gt;I am not talking more details on pixel density here, however, if you would like to learn more about what &amp;#8220;device pixels&amp;#8221; means and how a CSS pixel differs from a device pixel, I recommend PPK&amp;#8217;s article, &amp;#8220;&lt;a href=&quot;http://www.quirksmode.org/blog/archives/2010/04/a_pixel_is_not.html&quot; target=&quot;_blank&quot;&gt;A pixel is not a pixel is not a pixel&lt;/a&gt;&amp;#8220;.&lt;/p&gt;

&lt;h2&gt;Crazy vender differences on device-pixel-ratio&lt;/h2&gt;

&lt;p&gt;In Webkit, the media query to differentiate the &amp;#8220;regular&amp;#8221; display (where a CSS pixel equals to a device pixel) versus the high pixel density displays, &lt;code&gt;device-pixel-ratio&lt;/code&gt; is commonly used. To be precise, you must add the webkit prefix (as of August 2012), as &lt;code&gt;-webkit-min-device-pixel-ratio&lt;/code&gt;, to check the minimum value of 2, 1.5, etc.&lt;/p&gt;

&lt;p&gt;So what about non-Webkit?&lt;br&gt;
Well, this gets more complicated than you think- For Mozilla, prefixed min-device-pixel-ratio is &lt;code&gt;min--moz-device-pixel-ratio&lt;/code&gt;, and for Opera, the prefix rule is similar to webkit, &lt;code&gt;-o-min-device-pixel-ratio&lt;/code&gt;, however, Opera requires the device pixel ratio value as a fraction, as 2/1 and 3/2 (instead of 2 and 1.5, respectively).&lt;/p&gt;

&lt;p&gt;This is too annoying, right?&lt;/p&gt;

&lt;h2&gt;Unprefix it with resolution&lt;/h2&gt;

&lt;p&gt;So here&amp;#8217;s a solution &amp;#8211; use &lt;strong&gt;resolution&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Instead of writing,&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; 
       &lt;span class=&quot;nt&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;min--moz-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
       &lt;span class=&quot;nt&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-o-min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
       &lt;span class=&quot;nt&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;hi-res&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;css&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Write this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-min-device-pixel-ratio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; 
       &lt;span class=&quot;nt&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;min-resolution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;144dpi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;hi-res&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;css&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On current mobile browsers, this shorter media-queries work on Webkits (Safari, Chrome, Android, MeeGo/Nokia, Dolphin etc.) and Firefox, Opera &lt;del datetime=&quot;2012-08-04T05:52:51+00:00&quot;&gt;and IE9+&lt;/del&gt;! (&lt;strong&gt;Edit&lt;/strong&gt;: IE9 and IE10 &lt;em&gt;do&lt;/em&gt; support the resolution, however, it may recognize its value wrongly. e.g. Lumia 800 has the screen resolution of 480&amp;#215;800, while CSS pixel width of 320px, but the CSS resolution value is recognized as 96dpi, instead of 144dpi. &lt;strong&gt;Updated on Aug 23, 2012&lt;/strong&gt;: According to Microsoft&amp;#8217;s IE team, IE Mobile’s layout is done at 96dpi independently of the device so the dpi value not reflect the actual device.)&lt;/p&gt;

&lt;p&gt;In case you wonder where the number 144 comes from &amp;#8211; this is 1.5x of the regular screen resolution, 96dpi. If you want to detect Retina (Galaxy Nexus, or any displays with 2x pixel density), you use 192dpi.&lt;/p&gt;

&lt;p&gt;Once the proposed unit, &lt;strong&gt;dppx&lt;/strong&gt; is supported (no browsers support in this moment), this would be simpler like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;screen&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;min-resolution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.5dppx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;hi-res&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;css&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So stop worrying about the confusing &lt;code&gt;device-pixel-ratio&lt;/code&gt;. Life shouldn&amp;#8217;t be more complicated!&lt;/p&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href=&quot;http://www.w3.org/TR/css3-mediaqueries/#resolution&quot; target=&quot;_blank&quot;&gt;W3C &amp;#8211; Media Queries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://www.w3.org/TR/css3-values/#resolution&quot; target=&quot;_blank&quot;&gt;W3C &amp;#8211; CSS Values and Units Module Level 3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[HTML5: The Mobile Approach]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2012/07/31/html5-the-mobile-approach/" />
	  <id>http://girliemac.com/blog/2012/07/31/html5-the-mobile-approach</id>
	  <updated>2012-07-31T00:00:00-07:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;&lt;a href=&quot;http://girliemac.github.com/presentation-slides/cascade/#1&quot; title=&quot;presentation&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2012/07/html5-slide.png&quot; alt=&quot;&quot; title=&quot;html5-slide&quot; width=&quot;560&quot; height=&quot;410&quot; class=&quot;aligncenter size-full wp-image-500&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It was great to be invited to speak at &lt;a href=&quot;http://cascadesf.com/3197-2/&quot; target=&quot;_blank&quot;&gt;Innovators of the Web Conference&lt;/a&gt; at Adobe San Francisco on July 21.&lt;br&gt;
My talk was about strategies on mobile with HTML5 &amp;#8211; Adaptive approach (&amp;#8220;Responsive Web Design&amp;#8221;) and Mobile-only approach.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://girliemac.github.com/presentation-slides/cascade/#1&quot; title=&quot;presentation&quot; target=&quot;_blank&quot;&gt;The slides for my preso is available on github&lt;/a&gt;. Use arrow keys or spacebar to navigate the slides. (This is created on Google&amp;#8217;s HTML slide template, and it is best viewed on Webkit-based browsers.)&lt;/p&gt;

&lt;p&gt;I will blog about some of the contents here or Nokia blog soon! (Yes, I went back to Nokia a few months ago, in case you didn&amp;#8217;t know!)&lt;/p&gt;
</content>
	</entry>
	
	<entry>
	  <title type="html"><![CDATA[Creating Non-disruptive Notifications with HTML5]]></title>
	  <link rel="alternate" type="text/html" href="http://girliemac.com/blog/2012/03/29/creating-non-disruptive-notifications-with-html5/" />
	  <id>http://girliemac.com/blog/2012/03/29/creating-non-disruptive-notifications-with-html5</id>
	  <updated>2012-03-29T00:00:00-07:00</updated>
	  <author>
	    <name>Tomomi Imura</name>
	    <uri>http://girliemac.com</uri>
	  </author>
	  <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2012/03/notifications.png&quot; alt=&quot;web notifications&quot; title=&quot;notifications&quot; class=&quot;aligncenter&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;color:red&quot;&gt;Update: The API I used for this article has been &lt;strong&gt;deprecated&lt;/strong&gt; by W3C, and the example code no longer works on the latest browser. I have updated the code with using the new specification so please take a look at &lt;a href=&quot;https://github.com/girliemac/html5-notifications-webOS-style&quot;&gt;my github repo&lt;/a&gt;.
&lt;br&gt;&lt;br&gt;
Thanks!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;The &lt;strong&gt;HTML5 Web Notifications API&lt;/strong&gt; (now available on Chrome) allows you to display the Growl-like notification windows outside of the web browser window. Unlike the alert dialog, the notification windows do not disrupt a user&amp;#8217;s action, or requires extra user interactions.&lt;/p&gt;

&lt;p&gt;Using the API is quite simple, so I tried to replicate the infamous webOS notification system in HTML5. (In case you are not familiar with webOS UI and UX, see it on &lt;a href=&quot;http://www.youtube.com/watch?v=G8tFODkacak&quot; target=&quot;_blank&quot;&gt;YouTube&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;Live demo: &lt;a href=&quot;http://girliemac.github.com/html5-notifications-webOS-style&quot; target=&quot;_blank&quot;&gt;http://girliemac.github.com/html5-notifications-webOS-style&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Basic Notifications&lt;/h2&gt;

&lt;p&gt;First, check if the browser supports the API, by looking for the Notifications property.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;webkitNotifications&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Apparently, it is only supported by WebKit-based browser (well, Chrome, so far) so you need to add the vender prefix, instead of just &lt;code&gt;webkitNotifications&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next, your script needs to requests the user agent to ask a user for permission to show notifications. If you are already familiar with the &lt;em&gt;geolocation&lt;/em&gt; API, you have seen the &amp;#8220;Info bar&amp;#8221; on top of the browser.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/wp-content/uploads/2012/03/notifications-permission.png&quot; alt=&quot;permission bar&quot; title=&quot;notifications-permission&quot;&gt;&lt;/p&gt;

&lt;p&gt;To request the permission by &lt;code&gt;requestPermission()&lt;/code&gt;, you must invoke some event from a user, such as mouse click. See the example below:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;#someButton&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// check if a permission is set allowed&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;webkitNotifications&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;checkPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Allowed&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// do show the notifications&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// request a user permission&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;webkitNotifications&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;requestPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are two ways to create the notifications &amp;#8211; plain text or html.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Plain text- use &lt;code&gt;createNotification&lt;/code&gt; function that takes three optional params, icon image, title, and text:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;notification&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Notifications&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;avatar.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;New tweet from @girlie_mac&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;s1&quot;&gt;&amp;#39;OMG, a glass of water! http://instagr.am/p/...&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;HTML &amp;#8211; use &lt;code&gt;createHTMLNotification&lt;/code&gt; to include an external html file:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;notification&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;webkitNotifications&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createHTMLNotification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;tweet.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To show the notification:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;notification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Also, you can use the &lt;code&gt;cancel&lt;/code&gt; method to close the notifications if you wish. This example below let the notification close by itself 5 second after it is displayed:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;notification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ondisplay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Besides the &lt;code&gt;ondisplay&lt;/code&gt;, other event handlers available are:&lt;br&gt;
&lt;code&gt;onclick&lt;/code&gt;, &lt;code&gt;onshow&lt;/code&gt;, &lt;code&gt;onerror&lt;/code&gt;, and &lt;code&gt;onclose&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In my demo, I used the HTML notifications because only the HTML notification style allows you to fully customize the UI with CSS and add some UX with JavaScript.&lt;br&gt;
To create the webOS-esque &amp;#8220;slide-to-dismiss&amp;#8221; effect, I used jQuery UI&amp;#8217;s draggable and droppable. (I attempted to use the HTML5 drag and Drop, but for some reasons, I could not successfully make my code work within the notification window, although the code does work in a regular window.)&lt;br&gt;
The source code is on &lt;a href=&quot;https://github.com/girliemac/html5-notifications-webOS-style&quot; target=&quot;_blank&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hopefully, this API will be available on other browsers. (And Klout will replace the modal dialogs from hell to something more subtle like the web notifications in future. Can you believe once they had me to close seven modals after logging in? This has to be stopped no matter what.)&lt;/p&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;&lt;br /&gt;
http://dev.w3.org/2006/webapi/WebNotifications/publish/&amp;quot; target=&amp;quot;&lt;em&gt;blank&amp;quot;&amp;gt;W3C Draft&lt;/a&gt;&lt;br&gt;
&amp;lt;a href=&amp;quot;http://www.chromium.org/developers/design-documents/desktop-notifications/api-specification&amp;quot; target=&amp;quot;&lt;/em&gt;blank&amp;quot;&amp;gt;Chromium API Specification&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/notifications/quick/&quot; target=&quot;_blank&quot;&gt;HTML5 ROCKS&lt;/a&gt;&lt;/p&gt;
</content>
	</entry>
	

</feed>